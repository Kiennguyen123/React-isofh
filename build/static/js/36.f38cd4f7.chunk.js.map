{"version":3,"sources":["site/admin/components/common/input/index.js","data-access/md-environmental-tests-provider.js","redux-store/actions/md-environmental-tests/index.js","data-access/environmental-tests-provider.js","redux-store/actions/environmental-tests/index.js","site/admin/containers/environmental-tests/detail/index.js"],"names":["__webpack_require__","d","__webpack_exports__","InputDetail","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","title","value","width","table","style","a","createElement","className","md_environmental_tests_provider","getById","id","url","constants","api","mdEnvironmentalTests","client","requestApi","search","page","size","specimenTypeId","name","delete","createOrEdit","active","lines","confirm","Modal","updateData","data","dispatch","type","gotoPage","getState","mdEnvironmentalTestsProvider","then","s","code","total","totalElements","loadList","Promise","resolve","reject","snackbar","show","message","catch","e","onSearch","undefined","searchName","searchValue","searchActive","onSizeChange","onDeleteItem","item","content","concat","okText","okType","cancelText","onOk","index","findIndex","x","splice","Object","toConsumableArray","onCancel","loadDetail","specimenType","environmental_tests_provider","environmentalTests","actDateFrom","actDateTo","assessment","assessor","executor","mdEnvironmentalId","actDate","location","searchSpecimenType","searchAssessment","searchAssessor","searchExecutor","searchDateFrom","searchDateTo","environmentalTestsProvider","dataIndex","action","moment","format","assessorId","executorId","r","antd__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_admin_components_common_input__WEBPACK_IMPORTED_MODULE_3__","_actions_environmental_tests__WEBPACK_IMPORTED_MODULE_4__","_actions_md_environmental_tests__WEBPACK_IMPORTED_MODULE_5__","_admin_components_admin__WEBPACK_IMPORTED_MODULE_6__","moment__WEBPACK_IMPORTED_MODULE_7__","moment__WEBPACK_IMPORTED_MODULE_7___default","connect","state","auth","checkUpdate","dataSpecimenTypes","specimenTypes","testMethod","referenceRange","unit","result","actionEnvironmentalTests","loadMdEnvironmentalTests","actionMdEnvironmentalTests","props","match","params","useEffect","history","replace","Fragment","allowClose","allowCollapse","map","option","key","borderTop","padding","background","textAlign","onClick","push","marginRight"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAJ,EAAA,KAGA,SAASG,EAATI,GAA4D,IAArCC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,MACjD,OACEP,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,oCACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,OACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAW,UAAYL,GAC1BL,EAAAQ,EAAAC,cAAA,QAAMC,UAAU,sBAAsBP,IAExCH,EAAAQ,EAAAC,cAAA,OAAKC,UAAW,WAAa,GAAKL,GAAQE,MAAOA,GAC9CD,EAAQF,EAAQJ,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,wBAAwBN,kGCRnDO,EAAA,CACbC,QADa,SACLC,GACN,IAAIC,EAAMC,IAAUC,IAAIC,qBAAuB,IAAMJ,EACrD,OAAOK,IAAOC,WAAW,MAAOL,EAAK,KAEvCM,OALa,SAKNC,EAAMC,EAAMC,EAAgBC,GACjC,IAAIV,EAAMC,IAAUC,IAAIC,qBAAuB,uBAK/C,OAJAH,GAAO,UAAqB,IAATO,EAAa,EAAIA,EAAOA,EAAO,EAAI,GACtDP,GAAO,UAAYQ,GAAQ,IACvBC,IAAgBT,GAAO,mBAAqBS,GAC5CC,IAAMV,GAAO,SAAWU,GACrBN,IAAOC,WAAW,MAAOL,EAAK,KAEvCW,OAba,SAaNZ,GACL,IAAIC,EAAMC,IAAUC,IAAIC,qBAAuB,IAAMJ,EACrD,OAAOK,IAAOC,WAAW,SAAUL,EAAK,KAE1CY,aAjBa,SAiBAb,EAAIc,EAAQH,EAAMpB,EAAOmB,EAAgBK,GACpD,GAAKf,EASE,CACL,IAAIC,EAAMC,IAAUC,IAAIC,qBAAuB,IAAMJ,EACrD,OAAOK,IAAOC,WAAW,MAAOL,EAAK,CACnCU,OACApB,QACAmB,iBACAK,QACAD,OAAQA,EAAS,EAAI,IAfvB,IAAIb,EAAMC,IAAUC,IAAIC,qBACxB,OAAOC,IAAOC,WAAW,OAAQL,EAAK,CACpCU,OACApB,QACAmB,iBACAK,QACAD,OAAQA,EAAS,EAAI,cCvBrBE,uBAAYC,EAAZD,SAER,SAASE,EAAWC,GAClB,OAAO,SAAAC,GACLA,EAAS,CACPC,KAAM,oCACNF,KAAMA,KAgCZ,SAASG,EAASd,GAChB,OAAO,SAACY,EAAUG,GAChBH,EAASF,EAAW,CAAEV,KAAMA,KAC5B,IAAIC,EAAOc,IAAWnB,qBAAqBK,MAAQ,GAGnDe,EAA6BjB,OAAOC,EAAMC,GAAMgB,KAAK,SAAAC,GAC/CA,GAAgB,IAAXA,EAAEC,MACTP,EACEF,EAAW,CACTU,MAAOF,EAAEG,eAAiBpB,EAC1BU,KAAMO,EAAEP,MAAQ,SAwJbnC,EAAA,GACb8C,SA9GF,SAAkBpB,GAChB,OAAO,SAACU,EAAUG,GAChBC,EAA6BjB,OAAO,EAAG,IAAMG,EAAgB,IAAIe,KAAK,SAAAC,GACpE,OAAQA,EAAEC,MACR,KAAK,EACHP,EACEF,EAAW,CACTd,qBAAsBsB,EAAEP,KACxBS,MAAOF,EAAEG,sBAuGrBhB,aA9FF,WACE,OAAO,SAACO,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3B,IAAIjC,EAAKuB,IAAWnB,qBAAqBJ,GAErCW,EAAOY,IAAWnB,qBAAqBO,KACvCpB,EAAQgC,IAAWnB,qBAAqBb,MACxCmB,EAAiBa,IAAWnB,qBAAqBM,eACjDK,EAAQQ,IAAWnB,qBAAqBW,MAC5CS,EACGX,aAAab,GANH,EAMeW,EAAMpB,EAAOmB,EAAgBK,GACtDU,KAAK,SAAAC,GACU,GAAVA,EAAEC,MACJP,EACEF,EAAW,CACTlB,GAAI,GACJW,KAAM,GACNpB,MAAO,GACPmB,eAAgB,GAChBK,MAAO,GACPD,QAAQ,KAGPd,EAGHkC,IAASC,KAAK,wFAAiD,WAF/DD,IAASC,KAAK,6EAA6C,WAM7DH,EAAQN,EAAEP,QAELnB,EAGHkC,IAASC,KAAKT,EAAEU,SAAW,uFAAkD,UAF7EF,IAASC,KAAKT,EAAEU,SAAW,sFAAmD,UAIhFH,OAGHI,MAAM,SAAAC,GACLJ,IAASC,KAAK,sFAAmD,UACjEF,UAqDRf,aACAI,WACAiB,SAxLF,SAAkBhD,EAAOoB,EAAMG,GAC7B,OAAO,SAACM,EAAUG,QACHiB,IAAT7B,QAAgC6B,IAAVjD,GAExB6B,EACEF,EAAW,CACTuB,WAAY9B,EACZ+B,YAAanD,EACboD,aAAc7B,KAIpBM,EAASE,EAAS,MA6KpBsB,aApMF,SAAsBnC,GACpB,OAAO,SAACW,EAAUG,GAChBH,EACEF,EAAW,CACTT,KAAMA,KAGVW,EAASE,EAAS,MA8LpBuB,aAnDF,SAAsBC,GACpB,OAAO,SAAC1B,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3BjB,EAAQ,CACN1B,MAAO,mBACPyD,QAAO,qFAAAC,OAA+CF,EAAKnC,KAApD,KACPsC,OAAQ,SACRC,OAAQ,SACRC,WAAY,WACZC,KANM,WAOJ5B,EACGZ,OAAOkC,EAAK9C,IACZyB,KAAK,SAAAC,GACJ,GAAc,GAAVA,EAAEC,KAAW,CACfO,IAASC,KAAK,4EAA4C,WAC1D,IAAIhB,EAAOI,IAAWnB,qBAAqBe,MAAQ,GAC/CkC,EAAQlC,EAAKmC,UAAU,SAAAC,GAAC,OAAIA,EAAEvD,IAAM8C,EAAK9C,KAE7CmB,EAAKqC,OAAOH,EAAO,GACnBjC,EACEF,EAAW,CACTC,KAAKsC,OAAAC,EAAA,EAAAD,CAAKtC,MAGdC,EAASE,EAAS,IAClBU,SAEAE,IAASC,KAAK,qFAAkD,UAChEF,MAGHI,MAAM,SAAAC,GACLJ,IAASC,KAAK,qFAAkD,UAChEF,OAGN0B,SAjCM,WAkCJ1B,WAeR2B,WAxJF,SAAoB5D,GAClB,OAAO,SAACoB,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3BT,EACGzB,QAAQC,GACRyB,KAAK,SAAAC,GACJ,GAAIA,GAAe,GAAVA,EAAEC,MAAaD,EAAEP,KAYxB,OAXAC,EACEF,EAAW,CACTlB,GAAI0B,EAAEP,KAAKnB,GACXW,KAAMe,EAAEP,KAAKR,KACbpB,MAAOmC,EAAEP,KAAK5B,MACdmB,eAAgBgB,EAAEP,KAAKT,eACvBK,MAAOW,EAAEP,KAAKJ,MACd8C,aAAcnC,EAAEP,KAAK0C,qBAGzB7B,EAAQN,EAAEP,MAGVe,IAASC,KAAK,8DAAkC,UAChDF,EAAOP,KAGVW,MAAM,SAAAC,GACLJ,IAASC,KACPG,GAAKA,EAAEF,QAAUE,EAAEF,QAAU,0DAC7B,UAEFH,EAAOK,+ECxFFwB,EAAA,CACb/D,QADa,SACLC,GACN,IAAIC,EAAMC,IAAUC,IAAI4D,mBAAqB,IAAM/D,EACnD,OAAOK,IAAOC,WAAW,MAAOL,EAAK,KAEvCM,OALa,SAKNC,EAAMC,EAAMC,EAAgBsD,EAAaC,EAAWC,EAAYC,EAAUC,GAC/E,IAAInE,EAAMC,IAAUC,IAAI4D,mBAAqB,uBAS7C,OARA9D,GAAO,UAAqB,IAATO,EAAa,EAAIA,EAAOA,EAAO,EAAI,GACtDP,GAAO,UAAYQ,GAAQ,IACvBC,IAAgBT,GAAO,mBAAqBS,GAC5CsD,IAAa/D,GAAO,gBAAkB+D,GACtCC,IAAWhE,GAAO,cAAgBgE,GAClCC,IAAYjE,GAAO,eAAiBiE,GACpCC,IAAUlE,GAAO,aAAekE,GAChCC,IAAUnE,GAAO,aAAemE,GAC7B/D,IAAOC,WAAW,MAAOL,EAAK,KAEvCW,OAjBa,SAiBNZ,GACL,IAAIC,EAAMC,IAAUC,IAAI4D,mBAAqB,IAAM/D,EACnD,OAAOK,IAAOC,WAAW,SAAUL,EAAK,KAE1CY,aArBa,SAqBAb,EAAIU,EAAgB2D,EAAmBH,EAAYC,EAAUC,EAAUE,EAASvD,EAAOwD,GAClG,GAAKvE,EAYE,CACL,IAAIC,EAAMC,IAAUC,IAAI4D,mBAAqB,IAAM/D,EACnD,OAAOK,IAAOC,WAAW,MAAOL,EAAK,CACnCS,iBACA2D,oBACAH,aACAC,WACAC,WACAE,UACAvD,QACAwD,aArBF,IAAItE,EAAMC,IAAUC,IAAI4D,mBACxB,OAAO1D,IAAOC,WAAW,OAAQL,EAAK,CACpCS,iBACA2D,oBACAH,aACAC,WACAC,WACAE,UACAvD,QACAwD,0DC9BAvD,EAAYC,IAAZD,QAER,SAASE,EAAWC,GAClB,OAAO,SAAAC,GACLA,EAAS,CACPC,KAAM,iCACNF,KAAMA,KA4CZ,SAASG,EAASd,GAChB,OAAO,SAACY,EAAUG,GAChBH,EAASF,EAAW,CAAEV,KAAMA,KAC5B,IAAIC,EAAOc,IAAWwC,mBAAmBtD,MAAQ,GAC7CoD,EAAetC,IAAWwC,mBAAmBS,mBAC7CN,EAAa3C,IAAWwC,mBAAmBU,iBAC3CN,EAAW5C,IAAWwC,mBAAmBW,eACzCN,EAAW7C,IAAWwC,mBAAmBY,eACzCX,EAAczC,IAAWwC,mBAAmBa,eAC5CX,EAAY1C,IAAWwC,mBAAmBc,aAC9CC,EAA2BvE,OAAOC,EAAMC,EAAMoD,EAAcG,EAAaC,EAAWC,EAAYC,EAAUC,OAAU5B,GAAWf,KAAK,SAAAC,GAC9HA,GAAgB,IAAXA,EAAEC,MACTP,EACEF,EAAW,CACTU,MAAOF,EAAEG,eAAiBpB,EAC1BU,KAAMO,EAAEP,MAAQ,SAyJbnC,EAAA,GACb6B,aAxGF,WACE,OAAO,SAACO,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3B,IAAIjC,EAAKuB,IAAWwC,mBAAmB/D,GACnCU,EAAiBa,IAAWwC,mBAAmBrD,eAC/C2D,EAAoB9C,IAAWwC,mBAAmBM,kBAClDH,EAAa3C,IAAWwC,mBAAmBG,WAC3CC,EAAW5C,IAAWwC,mBAAmBI,SACzCC,EAAW7C,IAAWwC,mBAAmBK,SACzCE,EAAU/C,IAAWwC,mBAAmBO,QACxCC,EAAWhD,IAAWwC,mBAAmBQ,SACzCxD,EAAQQ,IAAWwC,mBAAmBhD,MAC1C+D,EACGjE,aAAab,EAAIU,EAAgB2D,EAAmBH,EAAYC,EAAUC,EAAUE,EAASvD,EAAOwD,GACpG9C,KAAK,SAAAC,GACU,GAAVA,EAAEC,MACJP,EACEF,EAAW,CACTlB,GAAI,GACJW,KAAM,GACNkD,aAAc,GACdK,WAAY,GACZC,SAAU,GACVC,SAAU,GACVE,QAAS,GACTvD,MAAO,GACPwD,SAAU,GACVC,mBAAoB,GACpBC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,GAChBI,UAAW,MAGV/E,EAGHkC,IAASC,KAAK,wDAA+B,WAF7CD,IAASC,KAAK,sDAA+B,WAI/Cf,EAASE,EAAS,IAClBU,EAAQN,EAAEP,QAELnB,EAGHkC,IAASC,KAAKT,EAAEU,SAAW,iEAAqC,UAFhEF,IAASC,KAAKT,EAAEU,SAAW,+DAAqC,UAIlEH,OAGHI,MAAM,SAAAC,GACLJ,IAASC,KAAK,+DAAqC,UACnDF,UAqDRf,aACAI,WACAiB,SAxMF,SAAkBpB,EAAM6D,GACtB,OAAO,SAAC5D,EAAUG,GAChB,IAAIiD,EAAgC,iBAAXQ,EAA4B7D,EAAOI,IAAWwC,mBAAmBS,mBACtFC,EAA8B,eAAXO,EAA0B7D,EAAOI,IAAWwC,mBAAmBU,iBAClFC,EAA4B,aAAXM,EAAwB7D,EAAOI,IAAWwC,mBAAmBW,eAC9EC,EAA4B,aAAXK,EAAwB7D,EAAOI,IAAWwC,mBAAmBY,eAC9EC,EAA4B,mBAAXI,EAA+B7D,GAAQ8D,IAAO9D,GAAM+D,OAAO,cAC7E3D,IAAWwC,mBAAmBa,gBAAkBK,IAAO1D,IAAWwC,mBAAmBa,gBAAgBM,OAAO,cAC3GL,EAA0B,iBAAXG,EAA6B7D,GAAQ8D,IAAO9D,GAAM+D,OAAO,cACzE3D,IAAWwC,mBAAmBc,cAAgBI,IAAO1D,IAAWwC,mBAAmBc,cAAcK,OAAO,mBAChF1C,IAAvBgC,QAAyDhC,IAArBiC,QAAqDjC,IAAnBkC,QAAmDlC,IAAnBmC,QACrFnC,IAAnBoC,QAAiDpC,IAAjBqC,GAEhCzD,EACEF,EAAW,CACTsD,mBAAoBA,EACpBC,iBAAkBA,EAClBC,eAAgBA,EAChBC,eAAgBA,EAChBC,eAAgBA,EAChBC,aAAcA,KAIpBzD,EAASE,EAAS,MAiLpBsB,aApNF,SAAsBnC,GACpB,OAAO,SAACW,EAAUG,GAChBH,EACEF,EAAW,CACTT,KAAMA,KAGVW,EAASE,EAAS,MA8MpBuB,aAnDF,SAAsBC,GACpB,OAAO,SAAC1B,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3BjB,EAAQ,CACN1B,MAAO,mBACPyD,QAAO,mCAAAC,QAAsBF,EAAKe,cAAgB,IAAIlD,KAA/C,aAAAqC,OAA4DF,EAAKwB,SAAWW,IAAOnC,EAAKwB,SAASY,OAAO,cAAxG,KACPjC,OAAQ,SACRC,OAAQ,SACRC,WAAY,WACZC,KANM,WAOJ0B,EACGlE,OAAOkC,EAAK9C,IACZyB,KAAK,SAAAC,GACJ,GAAc,GAAVA,EAAEC,KAAW,CACfO,IAASC,KAAK,4CAA0B,WACxC,IAAIhB,EAAOI,IAAWwC,mBAAmB5C,MAAQ,GACjDC,EACEF,EAAW,CACTC,KAAKsC,OAAAC,EAAA,EAAAD,CAAKtC,GACVqD,mBAAoB,GACpBC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,MAGpBvD,EAASE,EAAS,IAClBU,SAEAE,IAASC,KAAK,qDAAgC,UAC9CF,MAGHI,MAAM,SAAAC,GACLJ,IAASC,KAAK,qDAAgC,UAC9CF,OAGN0B,SAlCM,WAmCJ1B,WAcR2B,WAxJF,SAAoB5D,GAClB,OAAO,SAACoB,EAAUG,GAChB,OAAO,IAAIQ,QAAQ,SAACC,EAASC,GAC3B6C,EACG/E,QAAQC,GACRyB,KAAK,SAAAC,GACJ,GAAc,GAAVA,EAAEC,MAAaD,EAAEP,KAkBnB,OAjBAC,EACEF,EAAW,CACTlB,GAAI0B,EAAEP,KAAKnB,GACXe,MAAOW,EAAEP,KAAKJ,MACdmD,WAAYxC,EAAEP,KAAK+C,WACnBC,SAAUzC,EAAEP,KAAKgD,SACjBgB,WAAYzD,EAAEP,KAAKgE,WACnBf,SAAU1C,EAAEP,KAAKiD,SACjBgB,WAAY1D,EAAEP,KAAKiE,WACnBd,QAAS5C,EAAEP,KAAKmD,QAChBC,SAAU7C,EAAEP,KAAKoD,SACjBF,kBAAmB3C,EAAEP,KAAKkD,kBAC1BR,aAAcnC,EAAEP,KAAK0C,aACrBnD,eAAgBgB,EAAEP,KAAKT,uBAG3BsB,EAAQN,EAAEP,MAGVe,IAASC,KAAK,8DAAkC,UAChDF,EAAOP,KAGVW,MAAM,SAAAC,GACLJ,IAASC,KACPG,GAAKA,EAAEF,QAAUE,EAAEF,QAAU,0DAC7B,UAEFH,EAAOK,kECjHjBxD,EAAAuG,EAAArG,GAAA,IAAAE,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAoG,EAAAxG,EAAA,KAAAyG,EAAAzG,EAAA,IAAA0G,EAAA1G,EAAA,KAAA2G,EAAA3G,EAAA,KAAA4G,EAAA5G,EAAA,KAAA6G,EAAA7G,EAAA,GAAA8G,EAAA9G,EAAA,KAAA+G,EAAA/G,EAAAM,EAAAwG,GAAA9G,EAAA,KAyJegH,sBACb,SAAAC,GACE,MAAO,CACLC,KAAMD,EAAMC,KAAKA,KACjBhG,GAAI+F,EAAMhC,mBAAmB/D,GAC7B6D,aAAckC,EAAMhC,mBAAmBF,cAAgBkC,EAAMhC,mBAAmBF,aAAalD,KAC7FD,eAAgBqF,EAAMhC,mBAAmBrD,eACzC2D,kBAAmB0B,EAAMhC,mBAAmBM,kBAC5CH,WAAY6B,EAAMhC,mBAAmBG,WACrCC,SAAU4B,EAAMhC,mBAAmBI,SACnCC,SAAU2B,EAAMhC,mBAAmBK,SACnCe,WAAYY,EAAMhC,mBAAmBoB,WACrCC,WAAYW,EAAMhC,mBAAmBqB,WACrCb,SAAUwB,EAAMhC,mBAAmBQ,SACnCD,QAASyB,EAAMhC,mBAAmBO,SAAWW,IAAOc,EAAMhC,mBAAmBO,UAAY,KACzF2B,YAAaF,EAAMhC,mBAAmBkC,cAAe,EAErDC,kBAAmBH,EAAMI,cAAcA,eAAiB,GACxD/F,qBAAsB2F,EAAM3F,qBAAqBO,KAEjDI,MAAOgF,EAAMhC,mBAAmBhD,OAAS,GACzCJ,KAAMoF,EAAMhC,mBAAmBpD,KAC/ByF,WAAYL,EAAMhC,mBAAmBqC,WACrCC,eAAgBN,EAAMhC,mBAAmBsC,eACzCC,KAAMP,EAAMhC,mBAAmBuC,KAC/BC,OAAQR,EAAMhC,mBAAmBwC,SAElC,CACHrF,WAAYsF,IAAyBtF,WACrC0C,WAAY4C,IAAyB5C,WACrC6C,yBAA0BC,IAA2B9C,YA9BxCkC,CAhJf,SAAea,GAEb,IAAM3G,EAAK2G,EAAMC,MAAMC,OAAO7G,GA4C9B,OA1CA8G,oBAAU,WAERH,EAAMF,yBAAyBE,EAAMtC,mBAEjCrE,EACF2G,EAAM/C,WAAW5D,GAAIyB,KAAK,SAAAC,MACvBW,MAAM,SAAAC,GACPqE,EAAMI,QAAQC,QAAQ,0BAIxBL,EAAMzF,WAAW,CACflB,GAAI,KACJW,KAAM,GACNpB,MAAO,GACPmB,eAAgB,GAChBK,MAAO,GACPgE,UAAW,MAGd,IAuBD5F,EAAAQ,EAAAC,cAAAT,EAAAQ,EAAAsH,SAAA,KACE9H,EAAAQ,EAAAC,cAAC+F,EAAA,EAAD,CAAW9F,UAAU,2BACnBV,EAAAQ,EAAAC,cAAC+F,EAAA,EAAD,CACErG,MAAM,4FACNU,GAAI,0BACJkH,YAAY,EACZC,eAAe,GAEfhI,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,eACbV,EAAAQ,EAAAC,cAAA,WACET,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,0CACNC,MAAOoH,EAAM9C,eAEf1E,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,8BACNC,MAAOoH,EAAMvG,uBAEfjB,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,mDACNC,MAAOoH,EAAMpC,WAEfpF,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,uCACNC,MAAOoH,EAAMrC,SAAWW,IAAO0B,EAAMrC,SAASY,OAAO,cACrDA,OAAO,eAET/F,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,sCACNC,MAAOoH,EAAMvC,WAEfjF,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,wCACNC,MAAOoH,EAAMxC,WAEfhF,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,8DACNC,MAAOoH,EAAMvC,UAAYuC,EAAMzC,aAEjC/E,EAAAQ,EAAAC,cAAC4F,EAAA,EAAD,CACEhG,MAAO,EACPF,MAAM,sCACNC,MACEJ,EAAAQ,EAAAC,cAAA,SAAOC,UAAU,8BACfV,EAAAQ,EAAAC,cAAA,aACET,EAAAQ,EAAAC,cAAA,UACET,EAAAQ,EAAAC,cAAA,MAAIF,MAAO,CAAEF,MAAO,QAApB,oBACAL,EAAAQ,EAAAC,cAAA,MAAIF,MAAO,CAAEF,MAAO,QAApB,kDACAL,EAAAQ,EAAAC,cAAA,MAAIF,MAAO,CAAEF,MAAO,QAApB,6BACAL,EAAAQ,EAAAC,cAAA,MAAIF,MAAO,CAAEF,MAAO,QAApB,0BACAL,EAAAQ,EAAAC,cAAA,MAAIF,MAAO,CAAEF,MAAO,QAApB,uBAGJL,EAAAQ,EAAAC,cAAA,aAEI+G,EAAM5F,MAAMqG,IAAI,SAACC,EAAQhE,GACvB,OACElE,EAAAQ,EAAAC,cAAA,MAAI0H,IAAKjE,GACPlE,EAAAQ,EAAAC,cAAA,UAAKyH,EAAO1G,MACZxB,EAAAQ,EAAAC,cAAA,UAAKyH,EAAOjB,YACZjH,EAAAQ,EAAAC,cAAA,UAAKyH,EAAOhB,gBACZlH,EAAAQ,EAAAC,cAAA,UAAKyH,EAAOf,MACZnH,EAAAQ,EAAAC,cAAA,UAAKyH,EAAOd,iBAWhCpH,EAAAQ,EAAAC,cAAA,OACEF,MAAO,CACLF,MAAO,OACP+H,UAAW,oBACXC,QAAS,gBACTC,WAAY,OACZC,UAAW,UAGbvI,EAAAQ,EAAAC,cAAC0F,EAAA,EAAD,CAAQqC,QA9GF,WACdhB,EAAMI,QAAQa,KAAK,wBACnBjB,EAAMzF,WAAW,CACflB,GAAI,GACJU,eAAgB,GAChB2D,kBAAmB,GACnBH,WAAY,GACZC,SAAU,GACVC,SAAU,GACVE,QAAS,GACTS,UAAW,GACXR,SAAU,GACVxD,MAAO,GACP0D,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,GAChBH,mBAAoB,MA8FYnD,KAAK,UAAU3B,MAAO,CAAEmI,YAAa,IAA/D","file":"static/js/36.f38cd4f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.scss';\r\n\r\nfunction InputDetail({ title, value, width, table, style }) {\r\n  return (\r\n    <div className=\"search-type search-type-disabled\">\r\n      <div className=\"row\">\r\n        <div className={\"col-md-\" + width}>\r\n          <span className=\"title-search-input\">{title}</span>\r\n        </div>\r\n        <div className={\"col-md-\" + (12 - width)} style={style}>\r\n          {table ? value : <div className=\"title-input-disabled\">{value}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { InputDetail };\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.mdEnvironmentalTests + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  search(page, size, specimenTypeId, name) {\r\n    let url = constants.api.mdEnvironmentalTests + \"?sort=createdAt,desc\";\r\n    url += \"&page=\" + (page === 0 ? 0 : page ? page - 1 : 0);\r\n    url += \"&size=\" + (size || 10);\r\n    if (specimenTypeId) url += \"&specimenTypeId=\" + specimenTypeId;\r\n    if (name) url += \"&name=\" + name;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.mdEnvironmentalTests + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, active, name, value, specimenTypeId, lines) {\r\n    if (!id) {\r\n      let url = constants.api.mdEnvironmentalTests;\r\n      return client.requestApi(\"post\", url, {\r\n        name,\r\n        value,\r\n        specimenTypeId,\r\n        lines,\r\n        active: active ? 1 : 0\r\n      });\r\n    } else {\r\n      let url = constants.api.mdEnvironmentalTests + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        name,\r\n        value,\r\n        specimenTypeId,\r\n        lines,\r\n        active: active ? 1 : 0\r\n      });\r\n    }\r\n  }\r\n};\r\n","import mdEnvironmentalTestsProvider from \"@data-access/md-environmental-tests-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nfunction updateData(data) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"MD-ENVIRONMENTAL-TEST-UPDATE-DATA\",\r\n      data: data\r\n    });\r\n  };\r\n}\r\n\r\nfunction onSizeChange(size) {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      updateData({\r\n        size: size\r\n      })\r\n    );\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction onSearch(value, name, active) {\r\n  return (dispatch, getState) => {\r\n    if (name === undefined && value === undefined) {\r\n    } else {\r\n      dispatch(\r\n        updateData({\r\n          searchName: name,\r\n          searchValue: value,\r\n          searchActive: active\r\n        })\r\n      );\r\n    }\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction gotoPage(page) {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateData({ page: page }));\r\n    let size = getState().mdEnvironmentalTests.size || 10;\r\n    // let name = getState().mdEnvironmentalTests.searchName;\r\n    // let specimenTypeId = getState().mdEnvironmentalTests.specimenTypeId;\r\n    mdEnvironmentalTestsProvider.search(page, size).then(s => {\r\n      if (s && s.code === 0) {\r\n        dispatch(\r\n          updateData({\r\n            total: s.totalElements || size,\r\n            data: s.data || []\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadDetail(id) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      mdEnvironmentalTestsProvider\r\n        .getById(id)\r\n        .then(s => {\r\n          if (s && s.code == 0 && s.data) {\r\n            dispatch(\r\n              updateData({\r\n                id: s.data.id,\r\n                name: s.data.name,\r\n                value: s.data.value,\r\n                specimenTypeId: s.data.specimenTypeId,\r\n                lines: s.data.lines,\r\n                specimenType: s.data.specimenType\r\n              })\r\n            );\r\n            resolve(s.data);\r\n            return;\r\n          } else {\r\n            snackbar.show(\"Không tìm thấy kết quả phù hợp\", \"danger\");\r\n            reject(s);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\r\n            e && e.message ? e.message : \"Xảy ra lỗi, vui lòng thử lại sau\",\r\n            \"danger\"\r\n          );\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadList(specimenTypeId) {\r\n  return (dispatch, getState) => {\r\n    mdEnvironmentalTestsProvider.search(0, 1000, specimenTypeId, \"\").then(s => {\r\n      switch (s.code) {\r\n        case 0:\r\n          dispatch(\r\n            updateData({\r\n              mdEnvironmentalTests: s.data,\r\n              total: s.totalElements,\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createOrEdit() {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      let id = getState().mdEnvironmentalTests.id;\r\n      let active = true;\r\n      let name = getState().mdEnvironmentalTests.name;\r\n      let value = getState().mdEnvironmentalTests.value;\r\n      let specimenTypeId = getState().mdEnvironmentalTests.specimenTypeId;\r\n      let lines = getState().mdEnvironmentalTests.lines\r\n      mdEnvironmentalTestsProvider\r\n        .createOrEdit(id, active, name, value, specimenTypeId, lines)\r\n        .then(s => {\r\n          if (s.code == 0) {\r\n            dispatch(\r\n              updateData({\r\n                id: \"\",\r\n                name: \"\",\r\n                value: \"\",\r\n                specimenTypeId: \"\",\r\n                lines: [],\r\n                active: false,\r\n              })\r\n            );\r\n            if (!id) {\r\n              snackbar.show(\"Thêm gói xét nghiệm môi trường thành công\", \"success\");\r\n            } else {\r\n              snackbar.show(\"Cập nhật gói xét nghiệm môi trường thành công\", \"success\");\r\n\r\n            }\r\n            // dispatch(gotoPage());\r\n            resolve(s.data);\r\n          } else {\r\n            if (!id) {\r\n              snackbar.show(s.message || \"Thêm gói xét nghiệm môi trường không thành công\", \"danger\");\r\n            } else {\r\n              snackbar.show(s.message || \"Sửa gói xét nghiệm môi trường không thành công\", \"danger\");\r\n            }\r\n            reject();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\"Thêm gói xét nghiệm môi trường không thành công\", \"danger\");\r\n          reject();\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction onDeleteItem(item) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      confirm({\r\n        title: \"Xác nhận\",\r\n        content: `Bạn có muốn xóa gói xét nghiệm môi trường ${item.name}?`,\r\n        okText: \"Xóa\",\r\n        okType: \"danger\",\r\n        cancelText: \"Hủy\",\r\n        onOk() {\r\n          mdEnvironmentalTestsProvider\r\n            .delete(item.id)\r\n            .then(s => {\r\n              if (s.code == 0) {\r\n                snackbar.show(\"Xóa gói xét nghiệm môi trường thành công\", \"success\");\r\n                let data = getState().mdEnvironmentalTests.data || [];\r\n                let index = data.findIndex(x => x.id == item.id);\r\n                if (index != -1);\r\n                data.splice(index, 1);\r\n                dispatch(\r\n                  updateData({\r\n                    data: [...data]\r\n                  })\r\n                );\r\n                dispatch(gotoPage(0));\r\n                resolve();\r\n              } else {\r\n                snackbar.show(\"Xóa gói xét nghiệm môi trường không thành công\", \"danger\");\r\n                reject();\r\n              }\r\n            })\r\n            .catch(e => {\r\n              snackbar.show(\"Xóa gói xét nghiệm môi trường không thành công\", \"danger\");\r\n              reject();\r\n            });\r\n        },\r\n        onCancel() {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport default {\r\n  loadList,\r\n  createOrEdit,\r\n  updateData,\r\n  gotoPage,\r\n  onSearch,\r\n  onSizeChange,\r\n  onDeleteItem,\r\n  loadDetail,\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.environmentalTests + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  search(page, size, specimenTypeId, actDateFrom, actDateTo, assessment, assessor, executor) {\r\n    let url = constants.api.environmentalTests + \"?sort=createdAt,desc\";\r\n    url += \"&page=\" + (page === 0 ? 0 : page ? page - 1 : 0);\r\n    url += \"&size=\" + (size || 10);\r\n    if (specimenTypeId) url += \"&specimenTypeId=\" + specimenTypeId;\r\n    if (actDateFrom) url += \"&actDateFrom=\" + actDateFrom;\r\n    if (actDateTo) url += \"&actDateTo=\" + actDateTo;\r\n    if (assessment) url += \"&assessment=\" + assessment;\r\n    if (assessor) url += \"&assessor=\" + assessor;\r\n    if (executor) url += \"&executor=\" + executor;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.environmentalTests + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, specimenTypeId, mdEnvironmentalId, assessment, assessor, executor, actDate, lines, location) {\r\n    if (!id) {\r\n      let url = constants.api.environmentalTests;\r\n      return client.requestApi(\"post\", url, {\r\n        specimenTypeId,\r\n        mdEnvironmentalId,\r\n        assessment,\r\n        assessor,\r\n        executor,\r\n        actDate,\r\n        lines,\r\n        location\r\n      });\r\n    } else {\r\n      let url = constants.api.environmentalTests + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        specimenTypeId,\r\n        mdEnvironmentalId,\r\n        assessment,\r\n        assessor,\r\n        executor,\r\n        actDate,\r\n        lines,\r\n        location\r\n      });\r\n    }\r\n  }\r\n};\r\n","import environmentalTestsProvider from \"@data-access/environmental-tests-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport { Modal } from \"antd\";\r\nimport moment from \"moment\"\r\nconst { confirm } = Modal;\r\n\r\nfunction updateData(data) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"ENVIROMENTAL-TESTS-UPDATE-DATA\",\r\n      data: data\r\n    });\r\n  };\r\n}\r\n\r\nfunction onSizeChange(size) {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      updateData({\r\n        size: size\r\n      })\r\n    );\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction onSearch(data, action) {\r\n  return (dispatch, getState) => {\r\n    let searchSpecimenType = action === \"specimenType\" ? data : getState().environmentalTests.searchSpecimenType;\r\n    let searchAssessment = action === \"assessment\" ? data : getState().environmentalTests.searchAssessment;\r\n    let searchAssessor = action === \"assessor\" ? data : getState().environmentalTests.searchAssessor;\r\n    let searchExecutor = action === \"executor\" ? data : getState().environmentalTests.searchExecutor;\r\n    let searchDateFrom = action === \"searchDateFrom\" ? (data && moment(data).format(\"YYYY-MM-DD\")) :\r\n      (getState().environmentalTests.searchDateFrom && moment(getState().environmentalTests.searchDateFrom).format(\"YYYY-MM-DD\"));\r\n    let searchDateTo = action === \"searchDateTo\" ? (data && moment(data).format(\"YYYY-MM-DD\")) :\r\n      (getState().environmentalTests.searchDateTo && moment(getState().environmentalTests.searchDateTo).format(\"YYYY-MM-DD\"));\r\n    if (searchSpecimenType === undefined && searchAssessment === undefined && searchAssessor === undefined && searchExecutor === undefined && \r\n      searchDateFrom === undefined && searchDateTo === undefined) {\r\n    } else {\r\n      dispatch(\r\n        updateData({\r\n          searchSpecimenType: searchSpecimenType,\r\n          searchAssessment: searchAssessment,\r\n          searchAssessor: searchAssessor,\r\n          searchExecutor: searchExecutor,\r\n          searchDateFrom: searchDateFrom,\r\n          searchDateTo: searchDateTo,\r\n        })\r\n      );\r\n    }\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction gotoPage(page) {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateData({ page: page }));\r\n    let size = getState().environmentalTests.size || 10;\r\n    let specimenType = getState().environmentalTests.searchSpecimenType;\r\n    let assessment = getState().environmentalTests.searchAssessment;\r\n    let assessor = getState().environmentalTests.searchAssessor;\r\n    let executor = getState().environmentalTests.searchExecutor;\r\n    let actDateFrom = getState().environmentalTests.searchDateFrom;\r\n    let actDateTo = getState().environmentalTests.searchDateTo;\r\n    environmentalTestsProvider.search(page, size, specimenType, actDateFrom, actDateTo, assessment, assessor, executor, undefined).then(s => {\r\n      if (s && s.code === 0) {\r\n        dispatch(\r\n          updateData({\r\n            total: s.totalElements || size,\r\n            data: s.data || []\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadDetail(id) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      environmentalTestsProvider\r\n        .getById(id)\r\n        .then(s => {\r\n          if (s.code == 0 && s.data) {\r\n            dispatch(\r\n              updateData({\r\n                id: s.data.id,\r\n                lines: s.data.lines,\r\n                assessment: s.data.assessment,\r\n                assessor: s.data.assessor,\r\n                assessorId: s.data.assessorId,\r\n                executor: s.data.executor,\r\n                executorId: s.data.executorId,\r\n                actDate: s.data.actDate,\r\n                location: s.data.location,\r\n                mdEnvironmentalId: s.data.mdEnvironmentalId,\r\n                specimenType: s.data.specimenType,\r\n                specimenTypeId: s.data.specimenTypeId\r\n              })\r\n            );\r\n            resolve(s.data);\r\n            return;\r\n          } else {\r\n            snackbar.show(\"Không tìm thấy kết quả phù hợp\", \"danger\");\r\n            reject(s);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\r\n            e && e.message ? e.message : \"Xảy ra lỗi, vui lòng thử lại sau\",\r\n            \"danger\"\r\n          );\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\n\r\nfunction createOrEdit() {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      let id = getState().environmentalTests.id;\r\n      let specimenTypeId = getState().environmentalTests.specimenTypeId;\r\n      let mdEnvironmentalId = getState().environmentalTests.mdEnvironmentalId;\r\n      let assessment = getState().environmentalTests.assessment;\r\n      let assessor = getState().environmentalTests.assessor;\r\n      let executor = getState().environmentalTests.executor;\r\n      let actDate = getState().environmentalTests.actDate;\r\n      let location = getState().environmentalTests.location;\r\n      let lines = getState().environmentalTests.lines;\r\n      environmentalTestsProvider\r\n        .createOrEdit(id, specimenTypeId, mdEnvironmentalId, assessment, assessor, executor, actDate, lines, location)\r\n        .then(s => {\r\n          if (s.code == 0) {\r\n            dispatch(\r\n              updateData({\r\n                id: \"\",\r\n                name: \"\",\r\n                specimenType: \"\",\r\n                assessment: \"\",\r\n                assessor: \"\",\r\n                executor: \"\",\r\n                actDate: \"\",\r\n                lines: \"\",\r\n                location: \"\",\r\n                searchSpecimenType: \"\",\r\n                searchAssessment: \"\",\r\n                searchAssessor: \"\",\r\n                searchExecutor: \"\",\r\n                dataIndex: \"\",\r\n              })\r\n            );\r\n            if (!id) {\r\n              snackbar.show(\"Thêm mới dữ liệu thành công\", \"success\");\r\n            } else {\r\n              snackbar.show(\"Cập nhật dữ liệu thành công\", \"success\");\r\n            }\r\n            dispatch(gotoPage(0));\r\n            resolve(s.data);\r\n          } else {\r\n            if (!id) {\r\n              snackbar.show(s.message || \"Thêm mới dữ liệu không thành công\", \"danger\");\r\n            } else {\r\n              snackbar.show(s.message || \"Cập nhật dữ liệu không thành công\", \"danger\");\r\n            }\r\n            reject();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\"Thêm mới dữ liệu không thành công\", \"danger\");\r\n          reject();\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction onDeleteItem(item) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      confirm({\r\n        title: \"Xác nhận\",\r\n        content: `Bạn có muốn xóa ${(item.specimenType || {}).name} ngày ${item.actDate && moment(item.actDate).format(\"dd-MM-YYYY\")}?`,\r\n        okText: \"Xóa\",\r\n        okType: \"danger\",\r\n        cancelText: \"Hủy\",\r\n        onOk() {\r\n          environmentalTestsProvider\r\n            .delete(item.id)\r\n            .then(s => {\r\n              if (s.code == 0) {\r\n                snackbar.show(\"Xóa dữ liệu thành công\", \"success\");\r\n                let data = getState().environmentalTests.data || [];\r\n                dispatch(\r\n                  updateData({\r\n                    data: [...data],\r\n                    searchSpecimenType: \"\",\r\n                    searchAssessment: \"\",\r\n                    searchAssessor: \"\",\r\n                    searchExecutor: \"\",\r\n                  })\r\n                );\r\n                dispatch(gotoPage(0));\r\n                resolve();\r\n              } else {\r\n                snackbar.show(\"Xóa dữ liệu không thành công\", \"danger\");\r\n                reject();\r\n              }\r\n            })\r\n            .catch(e => {\r\n              snackbar.show(\"Xóa dữ liệu không thành công\", \"danger\");\r\n              reject();\r\n            });\r\n        },\r\n        onCancel() {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport default {\r\n  createOrEdit,\r\n  updateData,\r\n  gotoPage,\r\n  onSearch,\r\n  onSizeChange,\r\n  onDeleteItem,\r\n  loadDetail\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { InputDetail } from \"@admin/components/common/input\";\r\nimport actionEnvironmentalTests from \"@actions/environmental-tests\";\r\nimport actionMdEnvironmentalTests from \"@actions/md-environmental-tests\";\r\nimport { AdminPage, Panel } from \"@admin/components/admin\";\r\nimport moment from 'moment'\r\nimport \"../style.scss\";\r\nfunction index(props) {\r\n\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n\r\n    props.loadMdEnvironmentalTests(props.mdEnvironmentalId)\r\n\r\n    if (id) {\r\n      props.loadDetail(id).then(s => {\r\n      }).catch(e => {\r\n        props.history.replace(\"/environmental-tests\");\r\n      });\r\n    }\r\n    else {\r\n      props.updateData({\r\n        id: null,\r\n        name: \"\",\r\n        value: \"\",\r\n        specimenTypeId: \"\",\r\n        lines: [],\r\n        dataIndex: [],\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onClose = () => {\r\n    props.history.push(\"/environmental-tests\");\r\n    props.updateData({\r\n      id: \"\",\r\n      specimenTypeId: \"\",\r\n      mdEnvironmentalId: \"\",\r\n      assessment: \"\",\r\n      assessor: \"\",\r\n      executor: \"\",\r\n      actDate: \"\",\r\n      dataIndex: \"\",\r\n      location: \"\",\r\n      lines: \"\",\r\n      searchAssessment: \"\",\r\n      searchAssessor: \"\",\r\n      searchExecutor: \"\",\r\n      searchSpecimenType: \"\",\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminPage className=\"mgr-environmental-tests\">\r\n        <Panel\r\n          title=\"Chi tiết danh sách xét nghiệm đánh giá môi trường\"\r\n          id={\"mgr-environmental-tests\"}\r\n          allowClose={false}\r\n          allowCollapse={false}\r\n        >\r\n          <div className=\"detail-body\">\r\n            <div>\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Loại mẫu xét nghiệm: \"\r\n                value={props.specimenType}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Gói xét nghiệm: \"\r\n                value={props.mdEnvironmentalTests}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Địa điểm lấy mẫu: \"\r\n                value={props.location}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Thời gian thực hiện: \"\r\n                value={props.actDate && moment(props.actDate).format(\"DD/MM/YYYY\")}\r\n                format=\"DD/MM/YYYY\"\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Người lấy mẫu: \"\r\n                value={props.executor}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Người đánh giá: \"\r\n                value={props.assessor}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Đánh giá mức độ ô nhiễm: \"\r\n                value={props.executor && props.assessment}\r\n              />\r\n              <InputDetail\r\n                width={2}\r\n                title=\"Đánh giá chi tiết: \"\r\n                value={\r\n                  <table className=\"table-sanitation-processes\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td style={{ width: \"15%\" }}>Thông số</td>\r\n                        <td style={{ width: \"20%\" }}>Phương pháp xác định</td>\r\n                        <td style={{ width: \"15%\" }}>\tDải tham chiếu</td>\r\n                        <td style={{ width: \"15%\" }}>\tĐơn vị</td>\r\n                        <td style={{ width: \"15%\" }}>Kết quả</td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        props.lines.map((option, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>{option.name}</td>\r\n                              <td>{option.testMethod}</td>\r\n                              <td>{option.referenceRange}</td>\r\n                              <td>{option.unit}</td>\r\n                              <td>{option.result}</td>\r\n                            </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              borderTop: \"1px solid #e9e9e9\",\r\n              padding: \"16px 16px 0px\",\r\n              background: \"#fff\",\r\n              textAlign: \"right\"\r\n            }}\r\n          >\r\n            <Button onClick={onClose} type=\"primary\" style={{ marginRight: 8 }}>Quay lại</Button>\r\n          </div>\r\n        </Panel>\r\n      </AdminPage>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      auth: state.auth.auth,\r\n      id: state.environmentalTests.id,\r\n      specimenType: state.environmentalTests.specimenType && state.environmentalTests.specimenType.name,\r\n      specimenTypeId: state.environmentalTests.specimenTypeId,\r\n      mdEnvironmentalId: state.environmentalTests.mdEnvironmentalId,\r\n      assessment: state.environmentalTests.assessment,\r\n      assessor: state.environmentalTests.assessor,\r\n      executor: state.environmentalTests.executor,\r\n      assessorId: state.environmentalTests.assessorId,\r\n      executorId: state.environmentalTests.executorId,\r\n      location: state.environmentalTests.location,\r\n      actDate: state.environmentalTests.actDate && moment(state.environmentalTests.actDate) || null,\r\n      checkUpdate: state.environmentalTests.checkUpdate || false,\r\n\r\n      dataSpecimenTypes: state.specimenTypes.specimenTypes || [],\r\n      mdEnvironmentalTests: state.mdEnvironmentalTests.name,\r\n\r\n      lines: state.environmentalTests.lines || [],\r\n      name: state.environmentalTests.name,\r\n      testMethod: state.environmentalTests.testMethod,\r\n      referenceRange: state.environmentalTests.referenceRange,\r\n      unit: state.environmentalTests.unit,\r\n      result: state.environmentalTests.result,\r\n    };\r\n  }, {\r\n  updateData: actionEnvironmentalTests.updateData,\r\n  loadDetail: actionEnvironmentalTests.loadDetail,\r\n  loadMdEnvironmentalTests: actionMdEnvironmentalTests.loadDetail,\r\n}\r\n)(index);\r\n"],"sourceRoot":""}
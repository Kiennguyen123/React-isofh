{"version":3,"sources":["config/data-contants.js","site/admin/components/common/input/index.js","data-access/sanitation-processes-provider.js","redux-store/actions/sanitation-processes/index.js","site/admin/containers/sanitation-processes/detail/index.js"],"names":["__webpack_exports__","loaiSanPham","id","name","label","listStatus","listTreatmentResult","listGender","listTrangThai","listTrangThaiDungCu","listChuyenTrangThaiDungCu","typeUsers","giaiDoanSuCo","__webpack_require__","d","InputDetail","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","title","value","width","table","style","a","createElement","className","sanitation_processes_provider","getById","url","constants","api","sanitationProcesses","client","requestApi","search","page","size","location","fromDate","toDate","result","delete","createOrEdit","active","status","executor","note","lines","confirm","Modal","updateData","data","dispatch","type","gotoPage","getState","searchName","searchLocation","searchToDate","searchFromDate","searchResult","sanitationProcessesProvider","then","s","code","total","totalElements","loadList","Promise","resolve","reject","content","executorLines","actDate","statusLines","noteLines","sanitationProcessTemplatesId","snackbar","show","message","catch","e","onSearch","item","action","moment","format","undefined","onSizeChange","onDeleteItem","concat","okText","okType","cancelText","onOk","index","findIndex","x","splice","Object","toConsumableArray","onCancel","loadDetail","r","antd__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_admin_components_common_input__WEBPACK_IMPORTED_MODULE_4__","_actions_sanitation_processes__WEBPACK_IMPORTED_MODULE_5__","_admin_components_admin__WEBPACK_IMPORTED_MODULE_6__","moment__WEBPACK_IMPORTED_MODULE_8__","moment__WEBPACK_IMPORTED_MODULE_8___default","_config_data_contants__WEBPACK_IMPORTED_MODULE_9__","connect","state","auth","actionSanitationProcesses","props","match","params","useEffect","history","replace","specimenTypeId","getStatus","DataContants","filter","parseInt","Number","length","allowClose","allowCollapse","map","option","key","borderTop","padding","background","textAlign","onClick","push","marginRight"],"mappings":"2FAAeA,EAAA,GACbC,YAAa,CACX,CACEC,GAAI,GACJC,KAAM,wBACNC,MAAO,UAET,CACEF,GAAI,GACJC,KAAM,8BACNC,MAAO,iBAGXC,WAAY,CACV,CACEH,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,mBACNC,MAAO,cAGXE,oBAAqB,CACnB,CACEJ,GAAI,EACJC,KAAM,0BACNC,MAAO,WAET,CACEF,GAAI,EACJC,KAAM,sBACNC,MAAO,aAET,CACEF,GAAI,EACJC,KAAM,qBACNC,MAAO,YAET,CACEF,GAAI,EACJC,KAAM,8BACNC,MAAO,kBAET,CACEF,GAAI,EACJC,KAAM,mDACNC,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,eACNC,MAAO,YAGXG,WAAY,CACV,CACEL,GAAI,EACJC,KAAM,UACNC,MAAO,UAET,CACEF,GAAI,EACJC,KAAM,MACNC,MAAO,SAGXI,cAAe,CACb,CACEN,GAAI,GACJC,KAAM,0BACNC,MAAO,cAET,CACEF,GAAI,GACJC,KAAM,4BACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,YAGXK,oBAAqB,CACnB,CACEP,GAAI,GACJC,KAAM,sBACNC,MAAO,aAET,CACEF,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,kCACNC,MAAO,iBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,WAET,CACEF,GAAI,GACJC,KAAM,kBACNC,MAAO,YAGXM,0BAA2B,CACzB,CACER,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,kCACNC,MAAO,iBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,YAGXO,UAAW,CACT,CACET,GAAI,EACJC,KAAM,cACNC,MAAO,eAET,CACEF,GAAI,EACJC,KAAM,8CACNC,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,6CACNC,MAAO,uBAET,CACEF,GAAI,EACJC,KAAM,gDA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","file":"static/js/38.cfb58968.chunk.js","sourcesContent":["export default {\r\n  loaiSanPham: [\r\n    {\r\n      id: 10,\r\n      name: 'Đồ vải',\r\n      label: 'DO_VAI'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Dụng cụ y tế',\r\n      label: 'DUNG_CU_Y_TE'\r\n    },\r\n  ],\r\n  listStatus: [\r\n    {\r\n      id: 10,\r\n      name: 'Chưa thực hiện',\r\n      label: 'CHUA_THUC_HIEN'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Đang thực hiện',\r\n      label: 'DANG_THUC_HIEN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Hoàn thành',\r\n      label: 'HOAN_THAN'\r\n    }\r\n  ],\r\n  listTreatmentResult: [\r\n    {\r\n      id: 1,\r\n      name: 'Đỡ, giảm',\r\n      label: 'DO_GIAM'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Khỏi bệnh',\r\n      label: 'KHOI_BENH'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Nặng hơn',\r\n      label: 'NANG_HON'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Không thay đổi',\r\n      label: 'KHONG_THAY_DOI'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Tiên lượng tử vong xin về',\r\n      label: 'TIEN_LUONG_TU_VONG'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Tử vong',\r\n      label: 'TU_VONG'\r\n    }\r\n  ],\r\n  listGender: [\r\n    {\r\n      id: 2,\r\n      name: 'Nữ',\r\n      label: 'FEMALE'\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'Nam',\r\n      label: 'MALE'\r\n    },\r\n  ],\r\n  listTrangThai: [\r\n    {\r\n      id: 10,\r\n      name: 'Chưa xử lý',\r\n      label: 'CHUA_XU_LY'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Đã thanh trùng',\r\n      label: 'DA_THANH_TRUNG'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    }\r\n  ],\r\n  listTrangThaiDungCu: [\r\n    {\r\n      id: 10,\r\n      name: 'Chờ duyệt',\r\n      label: 'CHO_DUYET'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Chờ tiệt khuẩn',\r\n      label: 'CHO_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã tiệt khuẩn',\r\n      label: 'DA_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 40,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    },\r\n    {\r\n      id: 50,\r\n      name: 'Quá hạn',\r\n      label: 'QUA_HAN'\r\n    }\r\n  ],\r\n  listChuyenTrangThaiDungCu: [\r\n    {\r\n      id: 20,\r\n      name: 'Chờ tiệt khuẩn',\r\n      label: 'CHO_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã tiệt khuẩn',\r\n      label: 'DA_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 40,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    },\r\n  ],\r\n  typeUsers: [\r\n    {\r\n      id: 1,\r\n      name: 'Super Admin',\r\n      label: 'super_admin'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Admin Quản Lý Nhiễm Khuẩn',\r\n      label: 'admin_ql_nhiem_khuan'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'User Quản Lý Nhiễm Khuẩn',\r\n      label: 'user_ql_nhiem_khuan'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Admin Quản Lý Môi Trường',\r\n      label: 'admin_ql_moi_truong'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'User Quản Lý Môi Trường',\r\n      label: 'user_ql_moi_truong'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'User khác',\r\n      label: 'user_khac'\r\n    },\r\n  ],\r\n  giaiDoanSuCo: [\r\n    {\r\n      id: 1,\r\n      name: 'Nguy cơ',\r\n      label: 'nguy_co'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Phát triển',\r\n      label: 'phat_trien'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Sự cố',\r\n      label: 'su_co'\r\n    },\r\n  ]\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './index.scss';\r\n\r\nfunction InputDetail({ title, value, width, table, style }) {\r\n  return (\r\n    <div className=\"search-type search-type-disabled\">\r\n      <div className=\"row\">\r\n        <div className={\"col-md-\" + width}>\r\n          <span className=\"title-search-input\">{title}</span>\r\n        </div>\r\n        <div className={\"col-md-\" + (12 - width)} style={style}>\r\n          {table ? value : <div className=\"title-input-disabled\">{value}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { InputDetail };\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.sanitationProcesses + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  search(page, size, name, location, fromDate, toDate, result) {\r\n    let url = constants.api.sanitationProcesses + \"?sort=createdAt,desc\";\r\n    url += \"&page=\" + (page === 0 ? 0 : page ? page - 1 : 0);\r\n    url += \"&size=\" + (size || 10);\r\n    if (name) url += \"&name=\" + name;\r\n    if (location) url += \"&location=\" + location;\r\n    if (fromDate) url += \"&fromDateStart=\" + fromDate;\r\n    if (toDate) url += \"&fromDateFinish=\" + toDate;\r\n    if (result) url += \"&result=\" + result;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.sanitationProcesses + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, active, name, location, fromDate, toDate, result, status, executor, note, lines) {\r\n    if (!id) {\r\n      let url = constants.api.sanitationProcesses;\r\n      return client.requestApi(\"post\", url, {\r\n        name, location, fromDate, toDate, result, status, executor, note, lines,\r\n        active: active ? 1 : 0\r\n      });\r\n    } else {\r\n      let url = constants.api.sanitationProcesses + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        name, location, fromDate, toDate, result, status, executor, note, lines,\r\n        active: active ? 1 : 0\r\n      });\r\n    }\r\n  }\r\n};\r\n","import sanitationProcessesProvider from \"@data-access/sanitation-processes-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nfunction updateData(data) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SANITATION-PROCESSES-UPDATE-DATA\",\r\n      data: data\r\n    });\r\n  };\r\n}\r\n\r\nfunction onSizeChange(size) {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      updateData({\r\n        size: size\r\n      })\r\n    );\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction onSearch(item, action) {\r\n  return (dispatch, getState) => {\r\n    let searchName = action === \"name\" ? item : getState().sanitationProcesses.searchName\r\n    let searchLocation = action === \"location\" ? item : getState().sanitationProcesses.searchLocation\r\n    let searchFromDate = action === \"searchFromDate\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().sanitationProcesses.searchFromDate && moment(getState().sanitationProcesses.searchFromDate).format(\"YYYY-MM-DD\"))\r\n    let searchToDate = action === \"searchToDate\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().sanitationProcesses.searchToDate && moment(getState().sanitationProcesses.searchToDate).format(\"YYYY-MM-DD\"))\r\n    let searchResult = action === \"result\" ? item : getState().sanitationProcesses.searchResult\r\n    if (searchName === undefined && searchLocation === undefined && searchToDate === undefined && searchFromDate === undefined && searchResult === undefined) {\r\n    } else {\r\n      dispatch(\r\n        updateData({\r\n          searchName: searchName,\r\n          searchLocation: searchLocation,\r\n          searchToDate: searchToDate,\r\n          searchFromDate: searchFromDate,\r\n          searchResult: searchResult\r\n        })\r\n      );\r\n    }\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction gotoPage(page) {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateData({ page: page }));\r\n    let size = getState().sanitationProcesses.size || 10;\r\n    let name = getState().sanitationProcesses.searchName\r\n    let location = getState().sanitationProcesses.searchLocation\r\n    let toDate = getState().sanitationProcesses.searchToDate\r\n    let fromDate = getState().sanitationProcesses.searchFromDate\r\n    let result = getState().sanitationProcesses.searchResult\r\n    sanitationProcessesProvider.search(page, size, name, location, fromDate, toDate, result).then(s => {\r\n      if (s && s.code === 0) {\r\n        dispatch(\r\n          updateData({\r\n            total: s.totalElements || size,\r\n            data: s.data || []\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadDetail(id) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      sanitationProcessesProvider\r\n        .getById(id)\r\n        .then(s => {\r\n          if (s && s.code == 0 && s.data) {\r\n            dispatch(\r\n              updateData({\r\n                id: s.data.id,\r\n                name: s.data.name,\r\n                location: s.data.location,\r\n                fromDate: s.data.fromDate,\r\n                toDate: s.data.toDate,\r\n                result: s.data.result,\r\n                status: s.data.status,\r\n                executor: s.data.executor,\r\n                note: s.data.note,\r\n                lines: s.data.lines,\r\n              })\r\n            );\r\n            resolve(s.data);\r\n            return;\r\n          }\r\n          snackbar.show(\"Không tìm thấy kết quả phù hợp\", \"danger\");\r\n          reject(s);\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\r\n            e && e.message ? e.message : \"Xảy ra lỗi, vui lòng thử lại sau\",\r\n            \"danger\"\r\n          );\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadList() {\r\n  return (dispatch, getState) => {\r\n    sanitationProcessesProvider.search(0, 1000, \"\", \"\").then(s => {\r\n      switch (s.code) {\r\n        case 0:\r\n          dispatch(\r\n            updateData({\r\n              sanitationProcesses: s.data,\r\n              total: s.totalElements,\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createOrEdit() {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      let id = getState().sanitationProcesses.id;\r\n      let active = true;\r\n      let name = getState().sanitationProcesses.name;\r\n      let location = getState().sanitationProcesses.location;\r\n      let fromDate = getState().sanitationProcesses.fromDate;\r\n      let toDate = getState().sanitationProcesses.toDate;\r\n      let result = getState().sanitationProcesses.result;\r\n      let status = getState().sanitationProcesses.status;\r\n      let executor = getState().sanitationProcesses.executor;\r\n      let note = getState().sanitationProcesses.note;\r\n      let lines = getState().sanitationProcesses.lines\r\n      sanitationProcessesProvider\r\n        .createOrEdit(id, active, name, location, fromDate, toDate, result, status, executor, note, lines)\r\n        .then(s => {\r\n          if (s.code == 0) {\r\n            dispatch(\r\n              updateData({\r\n                id: \"\",\r\n                name: \"\",\r\n                location: \"\",\r\n                fromDate: null,\r\n                toDate: null,\r\n                result: \"\",\r\n                status: \"\",\r\n                executor: \"\",\r\n                note: \"\",\r\n                lines: [],\r\n                content: \"\",\r\n                executorLines: \"\",\r\n                actDate: \"\",\r\n                statusLines: \"\",\r\n                noteLines: \"\",\r\n                active: false,\r\n                sanitationProcessTemplatesId: \"\"\r\n              })\r\n            );\r\n            if (!id) {\r\n              snackbar.show(\"Thêm lịch và quy trình vệ sinh môi trường Bệnh viện thành công\", \"success\");\r\n            } else {\r\n              snackbar.show(\"Cập nhật lịch và quy trình vệ sinh môi trường Bệnh viện thành công\", \"success\");\r\n\r\n            }\r\n            // dispatch(gotoPage());\r\n            resolve(s.data);\r\n          } else {\r\n            if (!id) {\r\n              snackbar.show(s.message || \"Thêm lịch và quy trình vệ sinh môi trường Bệnh viện không thành công\", \"danger\");\r\n            } else {\r\n              snackbar.show(s.message || \"Sửa lịch và quy trình vệ sinh môi trường Bệnh viện không thành công\", \"danger\");\r\n            }\r\n            reject();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\"Thêm lịch và quy trình vệ sinh môi trường Bệnh viện không thành công\", \"danger\");\r\n          reject();\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction onDeleteItem(item) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      confirm({\r\n        title: \"Xác nhận\",\r\n        content: `Bạn có muốn xóa lịch và quy trình vệ sinh môi trường Bệnh viện ${item.name}?`,\r\n        okText: \"Xóa\",\r\n        okType: \"danger\",\r\n        cancelText: \"Hủy\",\r\n        onOk() {\r\n          sanitationProcessesProvider\r\n            .delete(item.id)\r\n            .then(s => {\r\n              if (s.code == 0) {\r\n                snackbar.show(\"Xóa lịch và quy trình vệ sinh môi trường Bệnh viện thành công\", \"success\");\r\n                let data = getState().sanitationProcesses.data || [];\r\n                let index = data.findIndex(x => x.id == item.id);\r\n                if (index != -1);\r\n                data.splice(index, 1);\r\n                dispatch(\r\n                  updateData({\r\n                    data: [...data]\r\n                  })\r\n                );\r\n                dispatch(gotoPage(0));\r\n                resolve();\r\n              } else {\r\n                snackbar.show(\"Xóa lịch và quy trình vệ sinh môi trường Bệnh viện không thành công\", \"danger\");\r\n                reject();\r\n              }\r\n            })\r\n            .catch(e => {\r\n              snackbar.show(\"Xóa lịch và quy trình vệ sinh môi trường Bệnh viện không thành công\", \"danger\");\r\n              reject();\r\n            });\r\n        },\r\n        onCancel() {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport default {\r\n  loadList,\r\n  createOrEdit,\r\n  updateData,\r\n  gotoPage,\r\n  onSearch,\r\n  onSizeChange,\r\n  onDeleteItem,\r\n  loadDetail,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport dateUtils from \"mainam-react-native-date-utils\";\r\nimport { InputDetail } from \"@admin/components/common/input\";\r\nimport actionSanitationProcesses from \"@actions/sanitation-processes\";\r\nimport { AdminPage, Panel } from \"@admin/components/admin\";\r\nimport \"../style.scss\";\r\nimport moment from \"moment\";\r\nimport DataContants from \"@config/data-contants\";\r\nfunction index(props) {\r\n    const id = props.match.params.id;\r\n    useEffect(() => {\r\n        if (id)\r\n            props.loadDetail(id).then(s => {\r\n            }).catch(e => {\r\n                props.history.replace(\"/sanitation-processes\");\r\n            });\r\n        else {\r\n            props.updateData({\r\n                id: null,\r\n                name: \"\",\r\n                value: \"\",\r\n                specimenTypeId: \"\",\r\n                lines: [],\r\n            });\r\n        }\r\n    }, []);\r\n    const onClose = () => {\r\n        props.history.push(\"/sanitation-processes\");\r\n    };\r\n    const getStatus = (item) => {\r\n        var status = DataContants.listStatus.filter((data) => {\r\n            return parseInt(data.id) === Number(item)\r\n        })\r\n        if (status.length > 0)\r\n            return status[0];\r\n        return {};\r\n    }\r\n    return (\r\n        <AdminPage className=\"mgr-sanitation-processes\">\r\n            <Panel\r\n                title=\"Chi tiết Lịch vệ sinh môi trường\"\r\n                id={\"mgr-sanitation-processes\"}\r\n                allowClose={false}\r\n                allowCollapse={false}\r\n            >\r\n                <div className=\"detail-body\">\r\n                    <div>\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Tiêu đề: \"\r\n                            value={props.name}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Địa điểm: \"\r\n                            value={props.location}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Người thực hiện: \"\r\n                            value={props.executor}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Thời gian bắt đầu: \"\r\n                            value={props.fromDate ? moment(props.fromDate).format(\"DD-MM-YYYY\") : null}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Thời gian kết thúc: \"\r\n                            value={props.toDate ? moment(props.toDate).format(\"DD-MM-YYYY\") : null}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Trạng thái: \"\r\n                            value={getStatus(props.status) ? getStatus(props.status).name : null}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Kết quả đạt được: \"\r\n                            value={props.result}\r\n                        />\r\n                        <InputDetail\r\n                            width={2}\r\n                            title=\"Quy trình: \"\r\n                            value={\r\n                                <table className=\"table-sanitation-processes\" style={{ width: \"100%\" }}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td style={{ width: \"20%\" }}>Nội dung</td>\r\n                                            <td style={{ width: \"20%\" }}>Người thực hiện cụ thể</td>\r\n                                            <td style={{ width: \"20%\" }}>Ngày thực hiện</td>\r\n                                            <td style={{ width: \"20%\" }}>Trạng thái</td>\r\n                                            <td style={{ width: \"20%\" }}>Chi chú</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            props.lines.map((option, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{option.content}</td>\r\n                                                        <td>{option.executor}</td>\r\n                                                        <td>{option.actDate && moment(option.actDate).format(\"DD/MM/YYYY\")}</td>\r\n                                                        <td>{getStatus(option.status) && getStatus(option.status).name}</td>\r\n                                                        <td>{option.note}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        borderTop: \"1px solid #e9e9e9\",\r\n                        padding: \"16px 16px 0px\",\r\n                        background: \"#fff\",\r\n                        textAlign: \"right\"\r\n                    }}\r\n                >\r\n                    <Button onClick={onClose} type=\"primary\" style={{ marginRight: 8 }}>Quay lại</Button>\r\n                </div>\r\n            </Panel>\r\n        </AdminPage>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    state => {\r\n        return {\r\n            auth: state.auth.auth,\r\n            name: state.sanitationProcesses.name,\r\n            location: state.sanitationProcesses.location,\r\n            id: state.sanitationProcesses.id,\r\n            toDate: state.sanitationProcesses.toDate || null,\r\n            fromDate: state.sanitationProcesses.fromDate || null,\r\n            status: state.sanitationProcesses.status,\r\n            result: state.sanitationProcesses.result,\r\n            executor: state.sanitationProcesses.executor,\r\n            lines: state.sanitationProcesses.lines || [],\r\n        };\r\n    }, {\r\n    loadDetail: actionSanitationProcesses.loadDetail\r\n}\r\n)(index);\r\n"],"sourceRoot":""}
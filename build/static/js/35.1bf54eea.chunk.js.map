{"version":3,"sources":["config/data-contants.js","site/admin/components/common/input/index.js","data-access/infection-patients-provider.js","redux-store/actions/infection-patients/index.js","data-access/patient-histories-provider.js","redux-store/actions/patient-histories/index.js","site/admin/containers/infection-patients/detail/index.js"],"names":["__webpack_exports__","loaiSanPham","id","name","label","listStatus","listTreatmentResult","listGender","listTrangThai","listTrangThaiDungCu","listChuyenTrangThaiDungCu","typeUsers","giaiDoanSuCo","__webpack_require__","d","InputDetail","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","title","value","width","table","style","a","createElement","className","infection_patients_provider","getById","url","constants","api","infectionPatients","client","requestApi","search","page","size","patientName","reason","handling","departmentId","infectiousDiseaseId","treatmentResult","infectionDateFrom","infectionDateTo","curedDateFrom","curedDateTo","delete","createOrEdit","active","patientValue","patientDocument","medicalRecordNo","regDate","birthday","gender","phone","address","infectionDate","curedDate","hospitalizeDate","dischargeHospitalDate","type","confirm","Modal","updateData","data","dispatch","gotoPage","getState","searchPatientName","searchReason","searchHandling","searchDepartmentId","searchInfectiousDiseaseId","searchTreatmentResult","sort","searchInfectionDateFrom","searchInfectionDateTo","searchCuredDateFrom","searchCuredDateTo","infectionPatientsProvider","then","s","code","total","totalElements","loadList","Promise","resolve","reject","snackbar","show","message","catch","e","onSearch","item","action","moment","format","undefined","onSizeChange","onDeleteItem","content","concat","okText","okType","cancelText","onOk","index","findIndex","x","splice","Object","toConsumableArray","onCancel","loadDetail","patient_histories_provider","patientHistories","searchPatientDocument","patientHistoriesProvider","dataPatient","patientType","timeGoIn","timeGoOut","r","antd__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_admin_components_common_input__WEBPACK_IMPORTED_MODULE_4__","_actions_infection_patients__WEBPACK_IMPORTED_MODULE_5__","_actions_patient_histories__WEBPACK_IMPORTED_MODULE_6__","_admin_components_admin__WEBPACK_IMPORTED_MODULE_7__","_config_data_contants__WEBPACK_IMPORTED_MODULE_8__","moment__WEBPACK_IMPORTED_MODULE_9__","moment__WEBPACK_IMPORTED_MODULE_9___default","connect","state","auth","departments","infectiousDisease","infectiousDiseases","actionInfectioPatients","actionPatientHistories","actionInfectionPatients","props","match","params","useEffect","history","replace","getTreatmentResult","status","DataContants","filter","parseInt","Number","length","getDepartment","getInfectiousDisease","Fragment","allowClose","allowCollapse","padding","borderTop","background","textAlign","onClick","push","marginRight"],"mappings":"2FAAeA,EAAA,GACbC,YAAa,CACX,CACEC,GAAI,GACJC,KAAM,wBACNC,MAAO,UAET,CACEF,GAAI,GACJC,KAAM,8BACNC,MAAO,iBAGXC,WAAY,CACV,CACEH,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,mBACNC,MAAO,cAGXE,oBAAqB,CACnB,CACEJ,GAAI,EACJC,KAAM,0BACNC,MAAO,WAET,CACEF,GAAI,EACJC,KAAM,sBACNC,MAAO,aAET,CACEF,GAAI,EACJC,KAAM,qBACNC,MAAO,YAET,CACEF,GAAI,EACJC,KAAM,8BACNC,MAAO,kBAET,CACEF,GAAI,EACJC,KAAM,mDACNC,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,eACNC,MAAO,YAGXG,WAAY,CACV,CACEL,GAAI,EACJC,KAAM,UACNC,MAAO,UAET,CACEF,GAAI,EACJC,KAAM,MACNC,MAAO,SAGXI,cAAe,CACb,CACEN,GAAI,GACJC,KAAM,0BACNC,MAAO,cAET,CACEF,GAAI,GACJC,KAAM,4BACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,YAGXK,oBAAqB,CACnB,CACEP,GAAI,GACJC,KAAM,sBACNC,MAAO,aAET,CACEF,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,kCACNC,MAAO,iBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,WAET,CACEF,GAAI,GACJC,KAAM,kBACNC,MAAO,YAGXM,0BAA2B,CACzB,CACER,GAAI,GACJC,KAAM,gCACNC,MAAO,kBAET,CACEF,GAAI,GACJC,KAAM,kCACNC,MAAO,iBAET,CACEF,GAAI,GACJC,KAAM,uBACNC,MAAO,YAGXO,UAAW,CACT,CACET,GAAI,EACJC,KAAM,cACNC,MAAO,eAET,CACEF,GAAI,EACJC,KAAM,8CACNC,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,6CACNC,MAAO,uBAET,CACEF,GAAI,EACJC,KAAM,gDA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","file":"static/js/35.1bf54eea.chunk.js","sourcesContent":["export default {\r\n  loaiSanPham: [\r\n    {\r\n      id: 10,\r\n      name: 'Đồ vải',\r\n      label: 'DO_VAI'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Dụng cụ y tế',\r\n      label: 'DUNG_CU_Y_TE'\r\n    },\r\n  ],\r\n  listStatus: [\r\n    {\r\n      id: 10,\r\n      name: 'Chưa thực hiện',\r\n      label: 'CHUA_THUC_HIEN'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Đang thực hiện',\r\n      label: 'DANG_THUC_HIEN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Hoàn thành',\r\n      label: 'HOAN_THAN'\r\n    }\r\n  ],\r\n  listTreatmentResult: [\r\n    {\r\n      id: 1,\r\n      name: 'Đỡ, giảm',\r\n      label: 'DO_GIAM'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Khỏi bệnh',\r\n      label: 'KHOI_BENH'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Nặng hơn',\r\n      label: 'NANG_HON'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Không thay đổi',\r\n      label: 'KHONG_THAY_DOI'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Tiên lượng tử vong xin về',\r\n      label: 'TIEN_LUONG_TU_VONG'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Tử vong',\r\n      label: 'TU_VONG'\r\n    }\r\n  ],\r\n  listGender: [\r\n    {\r\n      id: 2,\r\n      name: 'Nữ',\r\n      label: 'FEMALE'\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'Nam',\r\n      label: 'MALE'\r\n    },\r\n  ],\r\n  listTrangThai: [\r\n    {\r\n      id: 10,\r\n      name: 'Chưa xử lý',\r\n      label: 'CHUA_XU_LY'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Đã thanh trùng',\r\n      label: 'DA_THANH_TRUNG'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    }\r\n  ],\r\n  listTrangThaiDungCu: [\r\n    {\r\n      id: 10,\r\n      name: 'Chờ duyệt',\r\n      label: 'CHO_DUYET'\r\n    },\r\n    {\r\n      id: 20,\r\n      name: 'Chờ tiệt khuẩn',\r\n      label: 'CHO_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã tiệt khuẩn',\r\n      label: 'DA_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 40,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    },\r\n    {\r\n      id: 50,\r\n      name: 'Quá hạn',\r\n      label: 'QUA_HAN'\r\n    }\r\n  ],\r\n  listChuyenTrangThaiDungCu: [\r\n    {\r\n      id: 20,\r\n      name: 'Chờ tiệt khuẩn',\r\n      label: 'CHO_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 30,\r\n      name: 'Đã tiệt khuẩn',\r\n      label: 'DA_TIET_KHUAN'\r\n    },\r\n    {\r\n      id: 40,\r\n      name: 'Đã xuất',\r\n      label: 'DA_XUAT'\r\n    },\r\n  ],\r\n  typeUsers: [\r\n    {\r\n      id: 1,\r\n      name: 'Super Admin',\r\n      label: 'super_admin'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Admin Quản Lý Nhiễm Khuẩn',\r\n      label: 'admin_ql_nhiem_khuan'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'User Quản Lý Nhiễm Khuẩn',\r\n      label: 'user_ql_nhiem_khuan'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Admin Quản Lý Môi Trường',\r\n      label: 'admin_ql_moi_truong'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'User Quản Lý Môi Trường',\r\n      label: 'user_ql_moi_truong'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'User khác',\r\n      label: 'user_khac'\r\n    },\r\n  ],\r\n  giaiDoanSuCo: [\r\n    {\r\n      id: 1,\r\n      name: 'Nguy cơ',\r\n      label: 'nguy_co'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Phát triển',\r\n      label: 'phat_trien'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Sự cố',\r\n      label: 'su_co'\r\n    },\r\n  ]\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './index.scss';\r\n\r\nfunction InputDetail({ title, value, width, table, style }) {\r\n  return (\r\n    <div className=\"search-type search-type-disabled\">\r\n      <div className=\"row\">\r\n        <div className={\"col-md-\" + width}>\r\n          <span className=\"title-search-input\">{title}</span>\r\n        </div>\r\n        <div className={\"col-md-\" + (12 - width)} style={style}>\r\n          {table ? value : <div className=\"title-input-disabled\">{value}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { InputDetail };\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.infectionPatients + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  search(page, size, patientName, reason, handling, departmentId, infectiousDiseaseId, treatmentResult, infectionDateFrom, infectionDateTo, curedDateFrom, curedDateTo) {\r\n    let url = constants.api.infectionPatients + \"?sort=createdAt,desc\";\r\n\r\n    url += \"&page=\" + (page === 0 ? 0 : page ? page - 1 : 0);\r\n    url += \"&size=\" + (size || 10);\r\n    if (patientName) url += \"&patientName=\" + patientName;\r\n    if (departmentId) url += '&departmentId=' + departmentId;\r\n    if (reason) url += '&reason=' + reason;\r\n    if (handling) url += '&handling=' + handling;\r\n    if (infectiousDiseaseId) url += '&infectiousDiseaseId=' + infectiousDiseaseId;\r\n    if (treatmentResult) url += '&treatmentResult=' + treatmentResult;\r\n    if (infectionDateFrom) url += \"&infectionDateFrom=\" + infectionDateFrom;\r\n    if (infectionDateTo) url += \"&infectionDateTo=\" + infectionDateTo;\r\n    if (curedDateFrom) url += \"&curedDateFrom=\" + curedDateFrom;\r\n    if (curedDateTo) url += \"&curedDateTo=\" + curedDateTo;\r\n    url += \"&type=TRUYEN_NHIEM\";\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  delete(id) {\r\n    let url = constants.api.infectionPatients + \"/\" + id;\r\n    return client.requestApi(\"delete\", url, {});\r\n  },\r\n  createOrEdit(id, active, patientName, patientValue, patientDocument, medicalRecordNo, regDate, birthday,\r\n    gender, phone, address, departmentId, infectiousDiseaseId, reason, handling, infectionDate, curedDate,\r\n    treatmentResult, hospitalizeDate, dischargeHospitalDate) {\r\n    if (!id) {\r\n      let url = constants.api.infectionPatients;\r\n      return client.requestApi(\"post\", url, {\r\n        patientName,\r\n        patientValue,\r\n        patientDocument,\r\n        medicalRecordNo,\r\n        regDate,\r\n        birthday,\r\n        gender,\r\n        phone,\r\n        address,\r\n        departmentId,\r\n        infectiousDiseaseId,\r\n        reason,\r\n        handling,\r\n        infectionDate,\r\n        curedDate,\r\n        treatmentResult,\r\n        hospitalizeDate,\r\n        dischargeHospitalDate,\r\n        active: active ? true : false,\r\n        type: 1,\r\n      });\r\n    } else {\r\n      let url = constants.api.infectionPatients + \"/\" + id;\r\n      return client.requestApi(\"put\", url, {\r\n        patientName,\r\n        patientValue,\r\n        patientDocument,\r\n        medicalRecordNo,\r\n        regDate,\r\n        birthday,\r\n        gender,\r\n        phone,\r\n        address,\r\n        departmentId,\r\n        infectiousDiseaseId,\r\n        reason,\r\n        handling,\r\n        infectionDate,\r\n        curedDate,\r\n        treatmentResult,\r\n        hospitalizeDate,\r\n        dischargeHospitalDate,\r\n        active: active ? true : false,\r\n        type: 1,\r\n      });\r\n    }\r\n  }\r\n};\r\n","import infectionPatientsProvider from \"@data-access/infection-patients-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nfunction updateData(data) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"INFECTION-PATIENTS-UPDATE-DATA\",\r\n      data: data\r\n    });\r\n  };\r\n}\r\n\r\nfunction onSizeChange(size) {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      updateData({\r\n        size: size\r\n      })\r\n    );\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction onSearch(item, action) {\r\n  return (dispatch, getState) => {\r\n    let searchPatientName = action === \"patientName\" ? item : getState().infectionPatients.searchPatientName\r\n    let searchReason = action === \"reason\" ? item : getState().infectionPatients.searchReason\r\n    let searchHandling = action === \"handling\" ? item : getState().infectionPatients.searchHandling\r\n    let searchDepartmentId = action === \"departmentId\" ? item : getState().infectionPatients.searchDepartmentId\r\n    let searchInfectiousDiseaseId = action === \"infectiousDiseaseId\" ? item : getState().infectionPatients.searchInfectiousDiseaseId\r\n    let searchTreatmentResult = action === \"treatmentResult\" ? item : getState().infectionPatients.searchTreatmentResult\r\n    let searchInfectionDateFrom = action === \"infectionDateFrom\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().infectionPatients.searchInfectionDateFrom && moment(getState().infectionPatients.searchInfectionDateFrom).format(\"YYYY-MM-DD\"));\r\n\r\n    let searchInfectionDateTo = action === \"infectionDateTo\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().infectionPatients.searchInfectionDateTo && moment(getState().infectionPatients.searchInfectionDateTo).format(\"YYYY-MM-DD\"));\r\n\r\n    let searchCuredDateFrom = action === \"curedDateFrom\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().infectionPatients.searchCuredDateFrom && moment(getState().infectionPatients.searchCuredDateFrom).format(\"YYYY-MM-DD\"));\r\n\r\n    let searchCuredDateTo = action === \"curedDateTo\" ? (item && moment(item).format(\"YYYY-MM-DD\")) :\r\n      (getState().infectionPatients.searchCuredDateTo && moment(getState().infectionPatients.searchCuredDateTo).format(\"YYYY-MM-DD\"));\r\n\r\n    if (searchPatientName === undefined && searchReason === undefined && searchHandling === undefined &&\r\n      searchDepartmentId === undefined && searchInfectiousDiseaseId === undefined &&\r\n      searchTreatmentResult === undefined && searchInfectionDateFrom === undefined && searchInfectionDateTo === undefined\r\n      && searchCuredDateFrom === undefined && searchCuredDateTo === undefined\r\n    ) {\r\n    } else {\r\n      dispatch(\r\n        updateData({\r\n          searchPatientName: searchPatientName,\r\n          searchReason: searchReason,\r\n          searchHandling: searchHandling,\r\n          searchDepartmentId: searchDepartmentId,\r\n          searchInfectiousDiseaseId: searchInfectiousDiseaseId,\r\n          searchTreatmentResult: searchTreatmentResult,\r\n          searchInfectionDateFrom: searchInfectionDateFrom,\r\n          searchInfectionDateTo: searchInfectionDateTo,\r\n          searchCuredDateFrom: searchCuredDateFrom,\r\n          searchCuredDateTo: searchCuredDateTo,\r\n        })\r\n      );\r\n    }\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction gotoPage(page) {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateData({ page: page }));\r\n    let size = getState().infectionPatients.size || 10;\r\n    let patientName = getState().infectionPatients.searchPatientName;\r\n    let reason = getState().infectionPatients.searchReason;\r\n    let handling = getState().infectionPatients.searchHandling;\r\n    let departmentId = getState().infectionPatients.searchDepartmentId;\r\n    let infectiousDiseaseId = getState().infectionPatients.searchInfectiousDiseaseId\r\n    let treatmentResult = getState().infectionPatients.searchTreatmentResult\r\n    let sort = getState().infectionPatients.sort || {};\r\n    let infectionDateFrom = getState().infectionPatients.searchInfectionDateFrom;\r\n    let infectionDateTo = getState().infectionPatients.searchInfectionDateTo;\r\n    let curedDateFrom = getState().infectionPatients.searchCuredDateFrom;\r\n    let curedDateTo = getState().infectionPatients.searchCuredDateTo;\r\n    infectionPatientsProvider.search(page, size, patientName, reason, handling, departmentId, infectiousDiseaseId, treatmentResult,\r\n      infectionDateFrom, infectionDateTo, curedDateFrom, curedDateTo).then(s => {\r\n        if (s && s.code === 0) {\r\n          dispatch(\r\n            updateData({\r\n              total: s.totalElements || size,\r\n              data: s.data || []\r\n            })\r\n          );\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction loadDetail(id) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      infectionPatientsProvider\r\n        .getById(id)\r\n        .then(s => {\r\n          if (s && s.code == 0 && s.data) {\r\n            dispatch(\r\n              updateData({\r\n                id: s.data.id,\r\n                patientDocument: s.data.patientDocument,\r\n                patientValue: s.data.patientValue,\r\n                patientName: s.data.patientName,\r\n                medicalRecordNo: s.data.medicalRecordNo,\r\n                regDate: s.data.regDate,\r\n                birthday: s.data.birthday,\r\n                gender: s.data.gender,\r\n                phone: s.data.phone,\r\n                address: s.data.address,\r\n                departmentId: s.data.departmentId,\r\n                infectiousDiseaseId: s.data.infectiousDiseaseId,\r\n                reason: s.data.reason,\r\n                handling: s.data.handling,\r\n                infectionDate: s.data.infectionDate,\r\n                curedDate: s.data.curedDate,\r\n                treatmentResult: s.data.treatmentResult,\r\n                hospitalizeDate: s.data.hospitalizeDate,\r\n                dischargeHospitalDate: s.data.dischargeHospitalDate,\r\n              })\r\n            );\r\n            resolve(s.data);\r\n            return;\r\n          }\r\n          snackbar.show(\"Không tìm thấy kết quả phù hợp\", \"danger\");\r\n          reject(s);\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\r\n            e && e.message ? e.message : \"Xảy ra lỗi, vui lòng thử lại sau\",\r\n            \"danger\"\r\n          );\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadList() {\r\n  return (dispatch, getState) => {\r\n    infectionPatientsProvider.search(0, 1000, \"\", \"\").then(s => {\r\n      switch (s.code) {\r\n        case 0:\r\n          dispatch(\r\n            updateData({\r\n              infectionPatients: s.data,\r\n              total: s.totalElements,\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createOrEdit() {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      let id = getState().infectionPatients.id;\r\n      let active = true;\r\n      let patientName = getState().infectionPatients.patientName;\r\n      let patientValue = getState().infectionPatients.patientValue;\r\n      let patientDocument = getState().infectionPatients.patientDocument;\r\n      let medicalRecordNo = getState().infectionPatients.medicalRecordNo\r\n      let regDate = getState().infectionPatients.regDate\r\n      let birthday = getState().infectionPatients.birthday\r\n      let gender = getState().infectionPatients.gender\r\n      let phone = getState().infectionPatients.phone\r\n      let address = getState().infectionPatients.address\r\n\r\n      let departmentId = getState().infectionPatients.departmentId\r\n      let infectiousDiseaseId = getState().infectionPatients.infectiousDiseaseId\r\n      let reason = getState().infectionPatients.reason\r\n      let handling = getState().infectionPatients.handling\r\n      let infectionDate = getState().infectionPatients.infectionDate\r\n      let curedDate = getState().infectionPatients.curedDate\r\n      let treatmentResult = getState().infectionPatients.treatmentResult\r\n      let hospitalizeDate = getState().infectionPatients.hospitalizeDate\r\n      let dischargeHospitalDate = getState().infectionPatients.dischargeHospitalDate\r\n      infectionPatientsProvider\r\n        .createOrEdit(id, active, patientName, patientValue, patientDocument, medicalRecordNo, regDate, birthday,\r\n          gender, phone, address, departmentId, infectiousDiseaseId, reason, handling, infectionDate, curedDate,\r\n          treatmentResult, hospitalizeDate, dischargeHospitalDate)\r\n        .then(s => {\r\n          if (s.code == 0) {\r\n            dispatch(\r\n              updateData({\r\n                id: '',\r\n                patientDocument: '',\r\n                patientValue: '',\r\n                patientName: '',\r\n                medicalRecordNo: '',\r\n                regDate: null,\r\n                birthday: null,\r\n                gender: '',\r\n                phone: '',\r\n                address: '',\r\n                departmentId: '',\r\n                infectiousDiseaseId: '',\r\n                reason: '',\r\n                handling: '',\r\n                infectionDate: null,\r\n                curedDate: null,\r\n                treatmentResult: '',\r\n                hospitalizeDate: null,\r\n                dischargeHospitalDate: null,\r\n              })\r\n            );\r\n            if (!id) {\r\n              snackbar.show(\"Thêm người bệnh thành công\", \"success\");\r\n            } else {\r\n              snackbar.show(\"Cập nhật người bệnh thành công\", \"success\");\r\n\r\n            }\r\n            // dispatch(gotoPage());\r\n            resolve(s.data);\r\n          } else {\r\n            if (!id) {\r\n              snackbar.show(s.message || \"Thêm người bệnh không thành công\", \"danger\");\r\n            } else {\r\n              snackbar.show(s.message || \"Sửa thông tin người bệnh không thành công\", \"danger\");\r\n            }\r\n            reject();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\"Thêm người bệnh không thành công\", \"danger\");\r\n          reject();\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction onDeleteItem(item) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      confirm({\r\n        title: \"Xác nhận\",\r\n        content: `Bạn muốn xóa người bệnh mắc bệnh truyền nhiễm ${item.patientName}?`,\r\n        okText: \"Xóa\",\r\n        okType: \"danger\",\r\n        cancelText: \"Hủy\",\r\n        onOk() {\r\n          infectionPatientsProvider\r\n            .delete(item.id)\r\n            .then(s => {\r\n              if (s.code == 0) {\r\n                snackbar.show(\"Xóa người bệnh thành công\", \"success\");\r\n                let data = getState().infectionPatients.data || [];\r\n                let index = data.findIndex(x => x.id == item.id);\r\n                if (index != -1);\r\n                data.splice(index, 1);\r\n                dispatch(\r\n                  updateData({\r\n                    data: [...data]\r\n                  })\r\n                );\r\n                dispatch(gotoPage(0));\r\n                resolve();\r\n              } else {\r\n                snackbar.show(\"Xóa người bệnh không thành công\", \"danger\");\r\n                reject();\r\n              }\r\n            })\r\n            .catch(e => {\r\n              snackbar.show(\"Xóa người bệnh không thành công\", \"danger\");\r\n              reject();\r\n            });\r\n        },\r\n        onCancel() {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport default {\r\n  loadList,\r\n  createOrEdit,\r\n  updateData,\r\n  gotoPage,\r\n  onSearch,\r\n  onSizeChange,\r\n  onDeleteItem,\r\n  loadDetail,\r\n};\r\n","import client from \"../utils/client-utils\";\r\nimport constants from \"../resources/strings\";\r\n\r\nexport default {\r\n  getById(id) {\r\n    let url = constants.api.patientHistories + \"/\" + id;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  search(page, size, patientDocument) {\r\n    let url = constants.api.patientHistories + \"?sort=createdAt,desc\";\r\n    \r\n    url += \"&page=\" + (page === 0 ? 0 : page ? page - 1 : 0);\r\n    url += \"&size=\" + (size || 10);\r\n    if(patientDocument) url += \"&patientDocument=\" + patientDocument;\r\n    return client.requestApi(\"get\", url, {});\r\n  },\r\n  // delete(id) {\r\n  //   let url = constants.api.patientHistories + \"/\" + id;\r\n  //   return client.requestApi(\"delete\", url, {});\r\n  // },\r\n  // createOrEdit(id,active, patientName, patientValue, patientDocument, medicalRecordNo, regDate, birthday,\r\n  //   gender, phone, address, departmentId, infectiousDiseaseId, reason, handling, infectionDate, curedDate,\r\n  //   treatmentResult, hospitalizeDate,dischargeHospitalDate) {\r\n  //   if (!id) {\r\n  //     let url = constants.api.infectionPatients;\r\n  //     return client.requestApi(\"post\", url, {\r\n  //       patientName, \r\n  //       patientValue, \r\n  //       patientDocument, \r\n  //       medicalRecordNo, \r\n  //       regDate, \r\n  //       birthday,\r\n  //       gender, \r\n  //       phone, \r\n  //       address, \r\n  //       departmentId, \r\n  //       infectiousDiseaseId, \r\n  //       reason, \r\n  //       handling, \r\n  //       infectionDate, \r\n  //       curedDate,  \r\n  //       treatmentResult,\r\n  //       hospitalizeDate,\r\n  //       dischargeHospitalDate,\r\n  //       active: active ? true : false,\r\n  //       type : 1\r\n\r\n  //     });\r\n  //   } else {\r\n  //     let url = constants.api.infectionPatients + \"/\" + id;\r\n  //     return client.requestApi(\"put\", url, {\r\n  //       patientName, \r\n  //       patientValue, \r\n  //       patientDocument, \r\n  //       medicalRecordNo, \r\n  //       regDate, \r\n  //       birthday,\r\n  //       gender, \r\n  //       phone, \r\n  //       address, \r\n  //       departmentId, \r\n  //       infectiousDiseaseId, \r\n  //       reason, \r\n  //       handling, \r\n  //       infectionDate, \r\n  //       curedDate,\r\n  //       treatmentResult,\r\n  //       hospitalizeDate,\r\n  //       dischargeHospitalDate,\r\n  //       active: active ? true : false,\r\n  //       type : 1\r\n  //     });\r\n  //   }\r\n  // }\r\n};\r\n","import patientHistoriesProvider from \"@data-access/patient-histories-provider\";\r\nimport snackbar from \"@utils/snackbar-utils\";\r\nimport stringUtils from \"mainam-react-native-string-utils\";\r\nimport moment from \"moment\";\r\nimport { Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nfunction updateData(data) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"PATIENT-HISTORIES-UPDATE-DATA\",\r\n      data: data\r\n    });\r\n  };\r\n}\r\n\r\nfunction onSizeChange(size) {\r\n  return (dispatch, getState) => {\r\n    dispatch(\r\n      updateData({\r\n        size: size\r\n      })\r\n    );\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction onSearch(data, action) {\r\n  return (dispatch, getState) => {\r\n    let searchPatientDocument = action === \"patientDocument\" ? data: getState().patientHistories.searchPatientDocument;\r\n    if (searchPatientDocument === undefined) {\r\n    } else {\r\n      dispatch(\r\n        updateData({\r\n          searchPatientDocument: searchPatientDocument,\r\n        })\r\n      );\r\n    }\r\n    dispatch(gotoPage(0));\r\n  };\r\n}\r\n\r\nfunction gotoPage(page, data) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      dispatch(updateData({\r\n        page: page,\r\n        searchPatientDocument: data,\r\n      }));\r\n      let size = getState().patientHistories.size || 10;\r\n      let patientDocument = data ? data : getState().patientHistories.searchPatientDocument;\r\n      patientHistoriesProvider.search(page, size, patientDocument).then(s => {\r\n        if (s && s.code === 0) {\r\n          dispatch(\r\n            updateData({\r\n              total: s.totalElements || size,\r\n              dataPatient: s.data || []\r\n            })\r\n          );\r\n          resolve(s)\r\n        }\r\n      });\r\n    })\r\n  };\r\n}\r\n\r\nfunction loadDetail(id) {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      patientHistoriesProvider\r\n        .getById(id)\r\n        .then(s => {\r\n          if (s && s.code == 0 && s.data) {\r\n            dispatch(\r\n              updateData({\r\n                id: s.data.id,\r\n                patientName: s.data.patientName,\r\n                patientValue: s.data.patientValue,\r\n                medicalRecordNo: s.data.medicalRecordNo,\r\n                patientDocument: s.data.patientDocument,\r\n                regDate: s.data.regDate,\r\n                birthday: s.data.birthday,\r\n                phone: s.data.phone,\r\n                gender: s.data.gender,\r\n                departmentId: s.data.departmentId,\r\n                address: s.data.address,\r\n                patientType: s.data.patientType,\r\n                reason: s.data.reason,\r\n                timeGoIn: s.data.timeGoIn,\r\n                timeGoOut: s.data.timeGoOut,\r\n              })\r\n            );\r\n            resolve(s.data);\r\n            return;\r\n          }\r\n          snackbar.show(\"Không tìm thấy kết quả phù hợp\", \"danger\");\r\n          reject(s);\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\r\n            e && e.message ? e.message : \"Xảy ra lỗi, vui lòng thử lại sau\",\r\n            \"danger\"\r\n          );\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\nfunction loadList() {\r\n  return (dispatch, getState) => {\r\n    patientHistoriesProvider.search(0, 1000, \"\", \"\").then(s => {\r\n      switch (s.code) {\r\n        case 0:\r\n          dispatch(\r\n            updateData({\r\n              patientHistories: s.data,\r\n              total: s.totalElements,\r\n            })\r\n          );\r\n          break;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction createOrEdit() {\r\n  return (dispatch, getState) => {\r\n    return new Promise((resolve, reject) => {\r\n      let id = getState().patientHistories.id;\r\n      let active = true;\r\n      let patientName = getState().patientHistories.patientName;\r\n      let patientValue = getState().patientHistories.patientValue;\r\n      let patientDocument = getState().patientHistories.patientDocument;\r\n      let medicalRecordNo = getState().patientHistories.medicalRecordNo\r\n      let regDate = getState().patientHistories.regDate\r\n      let birthday = getState().patientHistories.birthday\r\n      let gender = getState().patientHistories.gender\r\n      let phone = getState().patientHistories.phone\r\n      let address = getState().patientHistories.address\r\n      let departmentId = getState().patientHistories.departmentId\r\n      // let infectiousDiseaseId = getState().infectionPatients.infectiousDiseaseId\r\n      // let reason = getState().infectionPatients.reason\r\n      // let handling = getState().infectionPatients.handling\r\n      // let infectionDate = getState().infectionPatients.infectionDate\r\n      // let curedDate = getState().infectionPatients.curedDate\r\n      // let treatmentResult = getState().infectionPatients.treatmentResult\r\n      // let hospitalizeDate = getState().infectionPatients.hospitalizeDate\r\n      // let dischargeHospitalDate = getState().infectionPatients.dischargeHospitalDate\r\n      patientHistoriesProvider\r\n        .createOrEdit(id, active, patientName, patientValue, patientDocument, medicalRecordNo, regDate, birthday,\r\n          gender, phone, address, departmentId)\r\n        .then(s => {\r\n          if (s.code == 0) {\r\n            dispatch(\r\n              updateData({\r\n                id: '',\r\n                patientDocument: '',\r\n                patientValue: '',\r\n                patientName: '',\r\n                medicalRecordNo: '',\r\n                regDate: null,\r\n                birthday: null,\r\n                gender: '',\r\n                phone: '',\r\n                address: '',\r\n                departmentId: '',\r\n\r\n              })\r\n            );\r\n            if (!id) {\r\n              snackbar.show(\"Thêm người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"success\");\r\n            } else {\r\n              snackbar.show(\"Cập nhật người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"success\");\r\n\r\n            }\r\n            // dispatch(gotoPage());\r\n            resolve(s.data);\r\n          } else {\r\n            if (!id) {\r\n              snackbar.show(s.message || \"Thêm người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"danger\");\r\n            } else {\r\n              snackbar.show(s.message || \"Sửa người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"danger\");\r\n            }\r\n            reject();\r\n          }\r\n        })\r\n        .catch(e => {\r\n          snackbar.show(\"Thêm người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"danger\");\r\n          reject();\r\n        });\r\n    });\r\n  };\r\n}\r\n\r\n// function onDeleteItem(item) {\r\n//   return (dispatch, getState) => {\r\n//     return new Promise((resolve, reject) => {\r\n//       confirm({\r\n//         title: \"Xác nhận\",\r\n//         content: `Bạn có muốn xóa người bệnh mắc bệnh truyền nhiễm trong bệnh viện ${item.name}?`,\r\n//         okText: \"Xóa\",\r\n//         okType: \"danger\",\r\n//         cancelText: \"Hủy\",\r\n//         onOk() {\r\n//             infectionPatientsProvider\r\n//             .delete(item.id)\r\n//             .then(s => {\r\n//               if (s.code == 0) {\r\n//                 snackbar.show(\"Xóa người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"success\");\r\n//                 let data = getState().infectionPatients.data || [];\r\n//                 let index = data.findIndex(x => x.id == item.id);\r\n//                 if (index != -1);\r\n//                 data.splice(index, 1);\r\n//                 dispatch(\r\n//                   updateData({\r\n//                     data: [...data]\r\n//                   })\r\n//                 );\r\n//                 dispatch(gotoPage(0));\r\n//                 resolve();\r\n//               } else {\r\n//                 snackbar.show(\"Xóa người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"danger\");\r\n//                 reject();\r\n//               }\r\n//             })\r\n//             .catch(e => {\r\n//               snackbar.show(\"Xóa người bệnh mắc bệnh truyền nhiễm trong bệnh viện thành công\", \"danger\");\r\n//               reject();\r\n//             });\r\n//         },\r\n//         onCancel() {\r\n//           reject();\r\n//         }\r\n//       });\r\n//     });\r\n//   };\r\n// }\r\n\r\nexport default {\r\n  loadList,\r\n  createOrEdit,\r\n  updateData,\r\n  gotoPage,\r\n  onSearch,\r\n  onSizeChange,\r\n  // onDeleteItem,\r\n  loadDetail,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport dateUtils from \"mainam-react-native-date-utils\";\r\nimport { InputDetail } from \"@admin/components/common/input\";\r\nimport actionInfectioPatients from \"@actions/infection-patients\";\r\nimport actionInfectionPatients from \"@actions/infection-patients\";\r\nimport actionPatientHistories from \"@actions/patient-histories\";\r\nimport { AdminPage, Panel } from \"@admin/components/admin\";\r\nimport DataContants from '../../../../../config/data-contants';\r\nimport moment from \"moment\";\r\nimport \"../style.scss\";\r\nfunction index(props) {\r\n    const id = props.match.params.id;\r\n    useEffect(() => {\r\n        if (id) {\r\n            props.loadDetail(id).then(s => {\r\n            }).catch(e => {\r\n                props.history.replace(\"/infection-patients\");\r\n            });\r\n        }\r\n        else {\r\n            props.updateData({\r\n                id: null,\r\n                patientDocument: '',\r\n                patientValue: '',\r\n                patientName: '',\r\n                medicalRecordNo: '',\r\n                regDate: null,\r\n                birthday: null,\r\n                gender: '',\r\n                phone: '',\r\n                hospitalizeDate: null,\r\n                dischargeHospitalDate: null,\r\n                address: '',\r\n                departments: '',\r\n                infectiousDiseaseId: '',\r\n                reason: '',\r\n                handling: '',\r\n                infectionDate: null,\r\n                curedDate: null,\r\n                treatmentResult: '',\r\n            });\r\n        }\r\n    }, []);\r\n    const onClose = () => {\r\n        props.history.push(\"/infection-patients\");\r\n    };\r\n    const getTreatmentResult = (item) => {\r\n        var status = DataContants.listTreatmentResult.filter((data) => {\r\n            return parseInt(data.id) === Number(item)\r\n        })\r\n        if (status.length > 0)\r\n            return status[0];\r\n        return {};\r\n    }\r\n    const getDepartment = (item) => {\r\n        var status = props.departments.filter((data) => {\r\n            return parseInt(data.id) === Number(item)\r\n        })\r\n        if (status.length > 0)\r\n            return status[0];\r\n        return {};\r\n    }\r\n    const getInfectiousDisease = (item) => {\r\n        var status = props.infectiousDisease.filter((data) => {\r\n            return parseInt(data.id) === Number(item)\r\n        })\r\n        if (status.length > 0)\r\n            return status[0];\r\n        return {};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                // (props.auth.authorities === \"supper_admin\" || props.auth.authorities === \"admin_ql_nhiem_khuan\" || props.auth.authorities === \"user_ql_nhiem_khuan\") ?\r\n                    <AdminPage className=\"mgr-infection-patients-detail\">\r\n                        <Panel\r\n                            title=\"Chi tiết danh mục danh sách người bệnh mắc bênh truyền nhiễm trong bệnh viện\"\r\n                            id={\"mgr-infection-patients-detail\"}\r\n                            allowClose={false}\r\n                            allowCollapse={false}\r\n                        >\r\n                            <div className=\"detail-body row\">\r\n                                <div className='col-md-6'>\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Mã hồ sơ: \"\r\n                                        value={props.patientDocument}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Mã người bệnh: \"\r\n                                        value={props.patientValue}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Tên người bệnh: \"\r\n                                        value={props.patientName}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Mã bệnh án: \"\r\n                                        value={props.medicalRecordNo}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Ngày đăng ký: \"\r\n                                        value={moment(props.regDate).format(\"DD/MM/YYYY\")}\r\n                                    />\r\n\r\n                                </div>\r\n                                <div className='col-md-6'>\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Ngày sinh: \"\r\n                                        value={moment(props.birthday).format(\"DD/MM/YYYY\")}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Giới tính: \"\r\n                                        value={props.gender === 1 ? \"Nam\" : props.gender === 2 ? \"Nữ\" : null}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Số điện thoại: \"\r\n                                        value={props.phone}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Ngày nhập viện: \"\r\n                                        value={props.hospitalizeDate}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Ngày xuất viện: \"\r\n                                        value={props.dischargeHospitalDate}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-12\" style={{ padding: 0 }}>\r\n                                    <InputDetail\r\n                                        width={2}\r\n                                        title=\"Địa chỉ: \"\r\n                                        value={props.address}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-6'>\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Khoa: \"\r\n                                        value={getDepartment(props.departmentId) ? getDepartment(props.departmentId).name : null}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Nhóm bệnh truyền nhiễm: \"\r\n                                        value={getInfectiousDisease(props.infectiousDiseaseId) ? getInfectiousDisease(props.infectiousDiseaseId).name : null}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-6'>\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Thời gian mắc bệnh: \"\r\n                                        value={moment(props.infectionDate).format(\"DD/MM/YYYY\")}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={4}\r\n                                        title=\"Thời gian điều trị xong: \"\r\n                                        value={moment(props.curedDate).format(\"DD/MM/YYYY\")}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-12\" style={{ padding: 0 }}>\r\n                                    <InputDetail\r\n                                        width={2}\r\n                                        title=\"Nguyên nhân: \"\r\n                                        value={props.reason}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={2}\r\n                                        title=\"Cách xử lý: \"\r\n                                        value={props.handling}\r\n                                    />\r\n                                    <InputDetail\r\n                                        width={2}\r\n                                        title=\"Kết quả điều trị: \"\r\n                                        value={getTreatmentResult(props.treatmentResult) ? getTreatmentResult(props.treatmentResult).name : null}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    borderTop: \"1px solid #e9e9e9\",\r\n                                    padding: \"16px 16px 0px\",\r\n                                    background: \"#fff\",\r\n                                    textAlign: \"right\"\r\n                                }}\r\n                            >\r\n                                <Button onClick={onClose} type=\"primary\" style={{ marginRight: 8 }}>Quay lại</Button>\r\n                            </div>\r\n                        </Panel>\r\n                    </AdminPage>\r\n                    // : null\r\n\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    state => {\r\n        return {\r\n            auth: state.auth.auth,\r\n            patientDocument: state.infectionPatients.patientDocument,\r\n            patientValue: state.infectionPatients.patientValue,\r\n            patientName: state.infectionPatients.patientName,\r\n            medicalRecordNo: state.infectionPatients.medicalRecordNo,\r\n            regDate: state.infectionPatients.regDate,\r\n            birthday: state.infectionPatients.birthday,\r\n            gender: state.infectionPatients.gender,\r\n            phone: state.infectionPatients.phone,\r\n\r\n            hospitalizeDate: state.infectionPatients.hospitalizeDate && moment(state.infectionPatients.hospitalizeDate).format(\"DD/MM/YYYY\") || null,\r\n            dischargeHospitalDate: state.infectionPatients.dischargeHospitalDate && moment(state.infectionPatients.dischargeHospitalDate).format(\"DD/MM/YYYY\") || null,\r\n            address: state.infectionPatients.address,\r\n            departmentId: state.infectionPatients.departmentId,\r\n            departments: state.departments.departments || [],\r\n            infectiousDiseaseId: state.infectionPatients.infectiousDiseaseId,\r\n            infectiousDisease: state.infectiousDiseases.infectiousDiseases || [],\r\n            reason: state.infectionPatients.reason,\r\n            handling: state.infectionPatients.handling,\r\n            infectionDate: state.infectionPatients.infectionDate,\r\n            curedDate: state.infectionPatients.curedDate,\r\n            treatmentResult: state.infectionPatients.treatmentResult,\r\n\r\n        };\r\n    }, {\r\n    loadDetail: actionInfectioPatients.loadDetail,\r\n    gotoPage: actionPatientHistories.gotoPage,\r\n    updateData: actionInfectionPatients.updateData,\r\n}\r\n)(index);\r\n"],"sourceRoot":""}